lno@0       @0         program     children: [@1 ]
lno@1       @1       statement     children: [@2 @6 @7 @11 @12 @16 @17 @25 @26 @34 @35 ]           stmt:main
lno@2       @2       statement     children: [@3 @4 @5 ]           stmt:assign
lno@2       @3            type           type:int
lno@2       @4        variable      var_name: a
lno@2       @5           const          type: int         value: 0      var_name: 
lno@2       @6       statement           stmt:skip
lno@3       @7       statement     children: [@8 @9 @10 ]           stmt:assign
lno@3       @8            type           type:int
lno@3       @9        variable      var_name: b
lno@3       @10           const          type: int         value: 1      var_name: 
lno@3       @11       statement           stmt:skip
lno@4       @12       statement     children: [@13 @14 @15 ]           stmt:assign
lno@4       @13            type           type:int
lno@4       @14        variable      var_name: c
lno@4       @15           const          type: int         value: 3      var_name: 
lno@4       @16       statement           stmt:skip
lno@5       @17       statement     children: [@18 @19 @20 ]           stmt:assign
lno@5       @18            type           type:int
lno@5       @19        variable      var_name: d
lno@5       @20      expression     children: [@21 @24 ]       operator:+          type: int
lno@5       @21      expression     children: [@22 @23 ]       operator:+          type: int
lno@5       @22           const          type: int         value: 1      var_name: 
lno@5       @23           const          type: int         value: 2      var_name: 
lno@5       @24           const          type: int         value: 3      var_name: 
lno@5       @25       statement           stmt:skip
lno@6       @26       statement     children: [@27 @28 @29 ]           stmt:assign
lno@6       @27            type           type:int
lno@6       @28        variable      var_name: e
lno@6       @29      expression     children: [@30 @31 ]       operator:+          type: int
lno@6       @30           const          type: int         value: 1      var_name: 
lno@6       @31      expression     children: [@32 @33 ]       operator:*          type: int
lno@6       @32           const          type: int         value: 2      var_name: 
lno@6       @33           const          type: int         value: 5      var_name: 
lno@6       @34       statement           stmt:skip
lno@7       @35       statement     children: [@36 @41 @47 @48 ]           stmt:ifelse
lno@7       @36      expression     children: [@37 @40 ]       operator:>          type: bool
lno@7       @37      expression     children: [@38 @39 ]       operator:+          type: int
lno@7       @38           const          type: int         value: 1      var_name: 
lno@7       @39           const          type: int         value: 1      var_name: 
lno@7       @40           const          type: int         value: 5      var_name: 
lno@7       @41       statement     children: [@42 @43 @44 ]           stmt:assign
lno@7       @42            type           type:int
lno@7       @43        variable      var_name: b
lno@7       @44      expression     children: [@45 @46 ]       operator:+          type: int
lno@7       @45        variable      var_name: a
lno@7       @46           const          type: int         value: 2      var_name: 
lno@7       @47       statement           stmt:skip
lno@8       @48       statement     children: [@49 @53 @56 @58 @62 ]           stmt:for
lno@8       @49       statement     children: [@50 @51 @52 ]           stmt:assign
lno@8       @50            type           type:int
lno@8       @51        variable      var_name: i
lno@8       @52           const          type: int         value: 0      var_name: 
lno@8       @53      expression     children: [@54 @55 ]       operator:<          type: bool
lno@8       @54        variable      var_name: i
lno@8       @55           const          type: int         value: 5      var_name: 
lno@8       @56      expression     children: [@57 ]       operator:++          type: int
lno@8       @57        variable      var_name: i
lno@8       @58       statement     children: [@59 @60 @61 ]           stmt:assign
lno@8       @59            type           type:int
lno@8       @60        variable      var_name: j
lno@8       @61        variable      var_name: i
lno@8       @62       statement           stmt:skip
