终端机在文法中未使用

    BOOL


状态 8 冲突：10 项偏移/归约
状态 16 冲突：2 项偏移/归约
状态 37 冲突：1 项偏移/归约
状态 42 冲突：2 项偏移/归约
状态 43 冲突：1 项偏移/归约
状态 46 冲突：23 项偏移/归约
状态 117 冲突：24 项偏移/归约
状态 118 冲突：23 项偏移/归约
状态 129 冲突：23 项偏移/归约
状态 140 冲突：23 项偏移/归约
状态 141 冲突：23 项偏移/归约
状态 142 冲突：23 项偏移/归约
状态 144 冲突：23 项偏移/归约
状态 150 冲突：23 项偏移/归约
状态 151 冲突：23 项偏移/归约
状态 152 冲突：23 项偏移/归约
状态 154 冲突：23 项偏移/归约


语法

    0 $accept: program $end

    1 program: statements

    2 statements: MAIN statements
    3           | statements statement
    4           | statement

    5 statement: block
    6          | decl_stmt
    7          | assign_stmt
    8          | if_stmt
    9          | for_stmt
   10          | while_stmt
   11          | jump_stmt
   12          | io_stmt
   13          | semi_stmt
   14          | expr

   15 semi_stmt: SEMICOLON

   16 block: LB statements RB

   17 decl_stmt: decl_stmt COMMA assign_stmt
   18          | decl_stmt COMMA IDENTIFIER
   19          | T IDENTIFIER
   20          | T assign_stmt

   21 assign_stmt: IDENTIFIER ASSIGN expr
   22            | IDENTIFIER ADDASSIGN expr
   23            | IDENTIFIER SUBASSIGN expr
   24            | IDENTIFIER MULASSIGN expr
   25            | IDENTIFIER DIVASSIGN expr

   26 if_stmt: IF LP expr RP statements ELSE statements
   27        | IF LP expr RP statements

   28 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   30         | FOR LP decl_stmt SEMICOLON SEMICOLON expr RP statements
   31         | FOR LP decl_stmt SEMICOLON expr SEMICOLON RP statements
   32         | FOR LP decl_stmt SEMICOLON SEMICOLON RP statements
   33         | FOR LP SEMICOLON expr SEMICOLON RP statements
   34         | FOR LP SEMICOLON SEMICOLON expr RP statements
   35         | FOR LP SEMICOLON SEMICOLON RP statements

   36 while_stmt: WHILE LP expr RP statements

   37 jump_stmt: BREAK
   38          | CONTINUE
   39          | RETURN
   40          | RETURN expr

   41 io_stmt: PRINTF LP expr RP
   42        | PRINTF LP STRING COMMA expr RP
   43        | PRINTF LP STRING COMMA ADDR expr RP
   44        | SCANF LP expr RP
   45        | SCANF LP STRING COMMA expr RP
   46        | SCANF LP STRING COMMA ADDR expr RP

   47 expr: LP expr RP
   48     | expr ADD expr
   49     | expr SUB expr
   50     | expr MUL expr
   51     | expr DIV expr
   52     | expr MOD expr
   53     | SUB expr
   54     | INC IDENTIFIER
   55     | IDENTIFIER INC
   56     | DEC IDENTIFIER
   57     | IDENTIFIER DEC
   58     | expr AND expr
   59     | expr OR expr
   60     | NOT expr
   61     | expr LT expr
   62     | expr GT expr
   63     | expr LE expr
   64     | expr GE expr
   65     | expr EQ expr
   66     | expr NEQ expr
   67     | TRUE
   68     | FALSE
   69     | IDENTIFIER
   70     | CHAR
   71     | INTEGER

   72 T: T_INT
   73  | T_CHAR
   74  | T_BOOL


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    T_CHAR (258) 73
    T_INT (259) 72
    T_BOOL (260) 74
    ADDR (261) 43 46
    SEMICOLON (262) 15 28 29 30 31 32 33 34 35
    COMMA (263) 17 18 42 43 45 46
    IF (264) 26 27
    ELSE (265) 26
    WHILE (266) 36
    FOR (267) 28 29 30 31 32 33 34 35
    RETURN (268) 39 40
    CONTINUE (269) 38
    BREAK (270) 37
    SCANF (271) 44 45 46
    PRINTF (272) 41 42 43
    MAIN (273) 2
    LP (274) 26 27 28 29 30 31 32 33 34 35 36 41 42 43 44 45 46 47
    RP (275) 26 27 28 29 30 31 32 33 34 35 36 41 42 43 44 45 46 47
    LB (276) 16
    RB (277) 16
    IDENTIFIER (278) 18 19 21 22 23 24 25 54 55 56 57 69
    INTEGER (279) 71
    CHAR (280) 70
    BOOL (281)
    STRING (282) 42 43 45 46
    TRUE (283) 67
    FALSE (284) 68
    ASSIGN (285) 21
    ADDASSIGN (286) 22
    SUBASSIGN (287) 23
    MULASSIGN (288) 24
    DIVASSIGN (289) 25
    AND (290) 58
    OR (291) 59
    LT (292) 61
    GT (293) 62
    LE (294) 63
    GE (295) 64
    EQ (296) 65
    NEQ (297) 66
    ADD (298) 48
    SUB (299) 49 53
    MUL (300) 50
    DIV (301) 51
    MOD (302) 52
    NOT (303) 60
    INC (304) 54 55
    DEC (305) 56 57
    MINUS (306)


非终结语词，附有它们出现处的规则

    $accept (52)
        on left: 0
    program (53)
        on left: 1
        on right: 0
    statements (54)
        on left: 2 3 4
        on right: 1 2 3 16 26 27 28 29 30 31 32 33 34 35 36
    statement (55)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 3 4
    semi_stmt (56)
        on left: 15
        on right: 13
    block (57)
        on left: 16
        on right: 5
    decl_stmt (58)
        on left: 17 18 19 20
        on right: 6 17 18 28 30 31 32
    assign_stmt (59)
        on left: 21 22 23 24 25
        on right: 7 17 20
    if_stmt (60)
        on left: 26 27
        on right: 8
    for_stmt (61)
        on left: 28 29 30 31 32 33 34 35
        on right: 9
    while_stmt (62)
        on left: 36
        on right: 10
    jump_stmt (63)
        on left: 37 38 39 40
        on right: 11
    io_stmt (64)
        on left: 41 42 43 44 45 46
        on right: 12
    expr (65)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
        on right: 14 21 22 23 24 25 26 27 28 29 30 31 33 34 36 40 41 42 43 44 45 46 47 48 49 50 51 52 53 58 59 60 61 62 63 64 65 66
    T (66)
        on left: 72 73 74
        on right: 19 20


状态 0

    0 $accept: . program $end

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    program      转到状态 25
    statements   转到状态 26
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 1

   73 T: T_CHAR .

    $default  使用规则 73 以归约 (T)


状态 2

   72 T: T_INT .

    $default  使用规则 72 以归约 (T)


状态 3

   74 T: T_BOOL .

    $default  使用规则 74 以归约 (T)


状态 4

   15 semi_stmt: SEMICOLON .

    $default  使用规则 15 以归约 (semi_stmt)


状态 5

   26 if_stmt: IF . LP expr RP statements ELSE statements
   27        | IF . LP expr RP statements

    LP  偏移，并进入状态 39


状态 6

   36 while_stmt: WHILE . LP expr RP statements

    LP  偏移，并进入状态 40


状态 7

   28 for_stmt: FOR . LP decl_stmt SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   30         | FOR . LP decl_stmt SEMICOLON SEMICOLON expr RP statements
   31         | FOR . LP decl_stmt SEMICOLON expr SEMICOLON RP statements
   32         | FOR . LP decl_stmt SEMICOLON SEMICOLON RP statements
   33         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   34         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   35         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  偏移，并进入状态 41


状态 8

   39 jump_stmt: RETURN .
   40          | RETURN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    LP          [使用规则 39 以归约 (jump_stmt)]
    IDENTIFIER  [使用规则 39 以归约 (jump_stmt)]
    INTEGER     [使用规则 39 以归约 (jump_stmt)]
    CHAR        [使用规则 39 以归约 (jump_stmt)]
    TRUE        [使用规则 39 以归约 (jump_stmt)]
    FALSE       [使用规则 39 以归约 (jump_stmt)]
    SUB         [使用规则 39 以归约 (jump_stmt)]
    NOT         [使用规则 39 以归约 (jump_stmt)]
    INC         [使用规则 39 以归约 (jump_stmt)]
    DEC         [使用规则 39 以归约 (jump_stmt)]
    $default    使用规则 39 以归约 (jump_stmt)

    expr  转到状态 43


状态 9

   38 jump_stmt: CONTINUE .

    $default  使用规则 38 以归约 (jump_stmt)


状态 10

   37 jump_stmt: BREAK .

    $default  使用规则 37 以归约 (jump_stmt)


状态 11

   44 io_stmt: SCANF . LP expr RP
   45        | SCANF . LP STRING COMMA expr RP
   46        | SCANF . LP STRING COMMA ADDR expr RP

    LP  偏移，并进入状态 44


状态 12

   41 io_stmt: PRINTF . LP expr RP
   42        | PRINTF . LP STRING COMMA expr RP
   43        | PRINTF . LP STRING COMMA ADDR expr RP

    LP  偏移，并进入状态 45


状态 13

    2 statements: MAIN . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 46
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 14

   47 expr: LP . expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 47


状态 15

   16 block: LB . statements RB

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 48
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 16

   21 assign_stmt: IDENTIFIER . ASSIGN expr
   22            | IDENTIFIER . ADDASSIGN expr
   23            | IDENTIFIER . SUBASSIGN expr
   24            | IDENTIFIER . MULASSIGN expr
   25            | IDENTIFIER . DIVASSIGN expr
   55 expr: IDENTIFIER . INC
   57     | IDENTIFIER . DEC
   69     | IDENTIFIER .

    ASSIGN     偏移，并进入状态 49
    ADDASSIGN  偏移，并进入状态 50
    SUBASSIGN  偏移，并进入状态 51
    MULASSIGN  偏移，并进入状态 52
    DIVASSIGN  偏移，并进入状态 53
    INC        偏移，并进入状态 54
    DEC        偏移，并进入状态 55

    INC       [使用规则 69 以归约 (expr)]
    DEC       [使用规则 69 以归约 (expr)]
    $default  使用规则 69 以归约 (expr)


状态 17

   71 expr: INTEGER .

    $default  使用规则 71 以归约 (expr)


状态 18

   70 expr: CHAR .

    $default  使用规则 70 以归约 (expr)


状态 19

   67 expr: TRUE .

    $default  使用规则 67 以归约 (expr)


状态 20

   68 expr: FALSE .

    $default  使用规则 68 以归约 (expr)


状态 21

   53 expr: SUB . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 56


状态 22

   60 expr: NOT . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 57


状态 23

   54 expr: INC . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 58


状态 24

   56 expr: DEC . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 59


状态 25

    0 $accept: program . $end

    $end  偏移，并进入状态 60


状态 26

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    $default  使用规则 1 以归约 (program)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 27

    4 statements: statement .

    $default  使用规则 4 以归约 (statements)


状态 28

   13 statement: semi_stmt .

    $default  使用规则 13 以归约 (statement)


状态 29

    5 statement: block .

    $default  使用规则 5 以归约 (statement)


状态 30

    6 statement: decl_stmt .
   17 decl_stmt: decl_stmt . COMMA assign_stmt
   18          | decl_stmt . COMMA IDENTIFIER

    COMMA  偏移，并进入状态 62

    $default  使用规则 6 以归约 (statement)


状态 31

    7 statement: assign_stmt .

    $default  使用规则 7 以归约 (statement)


状态 32

    8 statement: if_stmt .

    $default  使用规则 8 以归约 (statement)


状态 33

    9 statement: for_stmt .

    $default  使用规则 9 以归约 (statement)


状态 34

   10 statement: while_stmt .

    $default  使用规则 10 以归约 (statement)


状态 35

   11 statement: jump_stmt .

    $default  使用规则 11 以归约 (statement)


状态 36

   12 statement: io_stmt .

    $default  使用规则 12 以归约 (statement)


状态 37

   14 statement: expr .
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    SUB       [使用规则 14 以归约 (statement)]
    $default  使用规则 14 以归约 (statement)


状态 38

   19 decl_stmt: T . IDENTIFIER
   20          | T . assign_stmt

    IDENTIFIER  偏移，并进入状态 76

    assign_stmt  转到状态 77


状态 39

   26 if_stmt: IF LP . expr RP statements ELSE statements
   27        | IF LP . expr RP statements

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 78


状态 40

   36 while_stmt: WHILE LP . expr RP statements

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 79


状态 41

   28 for_stmt: FOR LP . decl_stmt SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   30         | FOR LP . decl_stmt SEMICOLON SEMICOLON expr RP statements
   31         | FOR LP . decl_stmt SEMICOLON expr SEMICOLON RP statements
   32         | FOR LP . decl_stmt SEMICOLON SEMICOLON RP statements
   33         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   34         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   35         | FOR LP . SEMICOLON SEMICOLON RP statements

    T_CHAR     偏移，并进入状态 1
    T_INT      偏移，并进入状态 2
    T_BOOL     偏移，并进入状态 3
    SEMICOLON  偏移，并进入状态 80

    decl_stmt  转到状态 81
    T          转到状态 38


状态 42

   55 expr: IDENTIFIER . INC
   57     | IDENTIFIER . DEC
   69     | IDENTIFIER .

    INC  偏移，并进入状态 54
    DEC  偏移，并进入状态 55

    INC       [使用规则 69 以归约 (expr)]
    DEC       [使用规则 69 以归约 (expr)]
    $default  使用规则 69 以归约 (expr)


状态 43

   40 jump_stmt: RETURN expr .
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    SUB       [使用规则 40 以归约 (jump_stmt)]
    $default  使用规则 40 以归约 (jump_stmt)


状态 44

   44 io_stmt: SCANF LP . expr RP
   45        | SCANF LP . STRING COMMA expr RP
   46        | SCANF LP . STRING COMMA ADDR expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    STRING      偏移，并进入状态 82
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 83


状态 45

   41 io_stmt: PRINTF LP . expr RP
   42        | PRINTF LP . STRING COMMA expr RP
   43        | PRINTF LP . STRING COMMA ADDR expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    STRING      偏移，并进入状态 84
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 85


状态 46

    2 statements: MAIN statements .
    3           | statements . statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 2 以归约 (statements)]
    T_INT       [使用规则 2 以归约 (statements)]
    T_BOOL      [使用规则 2 以归约 (statements)]
    SEMICOLON   [使用规则 2 以归约 (statements)]
    IF          [使用规则 2 以归约 (statements)]
    WHILE       [使用规则 2 以归约 (statements)]
    FOR         [使用规则 2 以归约 (statements)]
    RETURN      [使用规则 2 以归约 (statements)]
    CONTINUE    [使用规则 2 以归约 (statements)]
    BREAK       [使用规则 2 以归约 (statements)]
    SCANF       [使用规则 2 以归约 (statements)]
    PRINTF      [使用规则 2 以归约 (statements)]
    LP          [使用规则 2 以归约 (statements)]
    LB          [使用规则 2 以归约 (statements)]
    IDENTIFIER  [使用规则 2 以归约 (statements)]
    INTEGER     [使用规则 2 以归约 (statements)]
    CHAR        [使用规则 2 以归约 (statements)]
    TRUE        [使用规则 2 以归约 (statements)]
    FALSE       [使用规则 2 以归约 (statements)]
    SUB         [使用规则 2 以归约 (statements)]
    NOT         [使用规则 2 以归约 (statements)]
    INC         [使用规则 2 以归约 (statements)]
    DEC         [使用规则 2 以归约 (statements)]
    $default    使用规则 2 以归约 (statements)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 47

   47 expr: LP expr . RP
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 86
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 48

    3 statements: statements . statement
   16 block: LB statements . RB

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    RB          偏移，并进入状态 87
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 49

   21 assign_stmt: IDENTIFIER ASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 88


状态 50

   22 assign_stmt: IDENTIFIER ADDASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 89


状态 51

   23 assign_stmt: IDENTIFIER SUBASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 90


状态 52

   24 assign_stmt: IDENTIFIER MULASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 91


状态 53

   25 assign_stmt: IDENTIFIER DIVASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 92


状态 54

   55 expr: IDENTIFIER INC .

    $default  使用规则 55 以归约 (expr)


状态 55

   57 expr: IDENTIFIER DEC .

    $default  使用规则 57 以归约 (expr)


状态 56

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | SUB expr .
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    $default  使用规则 53 以归约 (expr)


状态 57

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | NOT expr .
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    $default  使用规则 60 以归约 (expr)


状态 58

   54 expr: INC IDENTIFIER .

    $default  使用规则 54 以归约 (expr)


状态 59

   56 expr: DEC IDENTIFIER .

    $default  使用规则 56 以归约 (expr)


状态 60

    0 $accept: program $end .

    $default  接受


状态 61

    3 statements: statements statement .

    $default  使用规则 3 以归约 (statements)


状态 62

   17 decl_stmt: decl_stmt COMMA . assign_stmt
   18          | decl_stmt COMMA . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 93

    assign_stmt  转到状态 94


状态 63

   58 expr: expr AND . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 95


状态 64

   59 expr: expr OR . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 96


状态 65

   61 expr: expr LT . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 97


状态 66

   62 expr: expr GT . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 98


状态 67

   63 expr: expr LE . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 99


状态 68

   64 expr: expr GE . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 100


状态 69

   65 expr: expr EQ . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 101


状态 70

   66 expr: expr NEQ . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 102


状态 71

   48 expr: expr ADD . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 103


状态 72

   49 expr: expr SUB . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 104


状态 73

   50 expr: expr MUL . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 105


状态 74

   51 expr: expr DIV . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 106


状态 75

   52 expr: expr MOD . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 107


状态 76

   19 decl_stmt: T IDENTIFIER .
   21 assign_stmt: IDENTIFIER . ASSIGN expr
   22            | IDENTIFIER . ADDASSIGN expr
   23            | IDENTIFIER . SUBASSIGN expr
   24            | IDENTIFIER . MULASSIGN expr
   25            | IDENTIFIER . DIVASSIGN expr

    ASSIGN     偏移，并进入状态 49
    ADDASSIGN  偏移，并进入状态 50
    SUBASSIGN  偏移，并进入状态 51
    MULASSIGN  偏移，并进入状态 52
    DIVASSIGN  偏移，并进入状态 53

    $default  使用规则 19 以归约 (decl_stmt)


状态 77

   20 decl_stmt: T assign_stmt .

    $default  使用规则 20 以归约 (decl_stmt)


状态 78

   26 if_stmt: IF LP expr . RP statements ELSE statements
   27        | IF LP expr . RP statements
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 108
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 79

   36 while_stmt: WHILE LP expr . RP statements
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 109
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 80

   29 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   33         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   34         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   35         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON   偏移，并进入状态 110
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 111


状态 81

   17 decl_stmt: decl_stmt . COMMA assign_stmt
   18          | decl_stmt . COMMA IDENTIFIER
   28 for_stmt: FOR LP decl_stmt . SEMICOLON expr SEMICOLON expr RP statements
   30         | FOR LP decl_stmt . SEMICOLON SEMICOLON expr RP statements
   31         | FOR LP decl_stmt . SEMICOLON expr SEMICOLON RP statements
   32         | FOR LP decl_stmt . SEMICOLON SEMICOLON RP statements

    SEMICOLON  偏移，并进入状态 112
    COMMA      偏移，并进入状态 62


状态 82

   45 io_stmt: SCANF LP STRING . COMMA expr RP
   46        | SCANF LP STRING . COMMA ADDR expr RP

    COMMA  偏移，并进入状态 113


状态 83

   44 io_stmt: SCANF LP expr . RP
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 114
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 84

   42 io_stmt: PRINTF LP STRING . COMMA expr RP
   43        | PRINTF LP STRING . COMMA ADDR expr RP

    COMMA  偏移，并进入状态 115


状态 85

   41 io_stmt: PRINTF LP expr . RP
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 116
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 86

   47 expr: LP expr RP .

    $default  使用规则 47 以归约 (expr)


状态 87

   16 block: LB statements RB .

    $default  使用规则 16 以归约 (block)


状态 88

   21 assign_stmt: IDENTIFIER ASSIGN expr .
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 21 以归约 (assign_stmt)


状态 89

   22 assign_stmt: IDENTIFIER ADDASSIGN expr .
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 22 以归约 (assign_stmt)


状态 90

   23 assign_stmt: IDENTIFIER SUBASSIGN expr .
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 23 以归约 (assign_stmt)


状态 91

   24 assign_stmt: IDENTIFIER MULASSIGN expr .
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 24 以归约 (assign_stmt)


状态 92

   25 assign_stmt: IDENTIFIER DIVASSIGN expr .
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 25 以归约 (assign_stmt)


状态 93

   18 decl_stmt: decl_stmt COMMA IDENTIFIER .
   21 assign_stmt: IDENTIFIER . ASSIGN expr
   22            | IDENTIFIER . ADDASSIGN expr
   23            | IDENTIFIER . SUBASSIGN expr
   24            | IDENTIFIER . MULASSIGN expr
   25            | IDENTIFIER . DIVASSIGN expr

    ASSIGN     偏移，并进入状态 49
    ADDASSIGN  偏移，并进入状态 50
    SUBASSIGN  偏移，并进入状态 51
    MULASSIGN  偏移，并进入状态 52
    DIVASSIGN  偏移，并进入状态 53

    $default  使用规则 18 以归约 (decl_stmt)


状态 94

   17 decl_stmt: decl_stmt COMMA assign_stmt .

    $default  使用规则 17 以归约 (decl_stmt)


状态 95

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   58     | expr AND expr .
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 58 以归约 (expr)


状态 96

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   59     | expr OR expr .
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 59 以归约 (expr)


状态 97

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   61     | expr LT expr .
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 61 以归约 (expr)


状态 98

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   62     | expr GT expr .
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 62 以归约 (expr)


状态 99

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   63     | expr LE expr .
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 63 以归约 (expr)


状态 100

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   64     | expr GE expr .
   65     | expr . EQ expr
   66     | expr . NEQ expr

    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 64 以归约 (expr)


状态 101

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   65     | expr EQ expr .
   66     | expr . NEQ expr

    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 65 以归约 (expr)


状态 102

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr
   66     | expr NEQ expr .

    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 66 以归约 (expr)


状态 103

   48 expr: expr . ADD expr
   48     | expr ADD expr .
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 48 以归约 (expr)


状态 104

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   49     | expr SUB expr .
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75

    $default  使用规则 49 以归约 (expr)


状态 105

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   50     | expr MUL expr .
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    $default  使用规则 50 以归约 (expr)


状态 106

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   51     | expr DIV expr .
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    $default  使用规则 51 以归约 (expr)


状态 107

   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   52     | expr MOD expr .
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    $default  使用规则 52 以归约 (expr)


状态 108

   26 if_stmt: IF LP expr RP . statements ELSE statements
   27        | IF LP expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 117
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 109

   36 while_stmt: WHILE LP expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 118
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 110

   34 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   35         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 119
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 120


状态 111

   29 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   33         | FOR LP SEMICOLON expr . SEMICOLON RP statements
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    SEMICOLON  偏移，并进入状态 121
    AND        偏移，并进入状态 63
    OR         偏移，并进入状态 64
    LT         偏移，并进入状态 65
    GT         偏移，并进入状态 66
    LE         偏移，并进入状态 67
    GE         偏移，并进入状态 68
    EQ         偏移，并进入状态 69
    NEQ        偏移，并进入状态 70
    ADD        偏移，并进入状态 71
    SUB        偏移，并进入状态 72
    MUL        偏移，并进入状态 73
    DIV        偏移，并进入状态 74
    MOD        偏移，并进入状态 75


状态 112

   28 for_stmt: FOR LP decl_stmt SEMICOLON . expr SEMICOLON expr RP statements
   30         | FOR LP decl_stmt SEMICOLON . SEMICOLON expr RP statements
   31         | FOR LP decl_stmt SEMICOLON . expr SEMICOLON RP statements
   32         | FOR LP decl_stmt SEMICOLON . SEMICOLON RP statements

    SEMICOLON   偏移，并进入状态 122
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 123


状态 113

   45 io_stmt: SCANF LP STRING COMMA . expr RP
   46        | SCANF LP STRING COMMA . ADDR expr RP

    ADDR        偏移，并进入状态 124
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 125


状态 114

   44 io_stmt: SCANF LP expr RP .

    $default  使用规则 44 以归约 (io_stmt)


状态 115

   42 io_stmt: PRINTF LP STRING COMMA . expr RP
   43        | PRINTF LP STRING COMMA . ADDR expr RP

    ADDR        偏移，并进入状态 126
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 127


状态 116

   41 io_stmt: PRINTF LP expr RP .

    $default  使用规则 41 以归约 (io_stmt)


状态 117

    3 statements: statements . statement
   26 if_stmt: IF LP expr RP statements . ELSE statements
   27        | IF LP expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    ELSE        偏移，并进入状态 128
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 27 以归约 (if_stmt)]
    T_INT       [使用规则 27 以归约 (if_stmt)]
    T_BOOL      [使用规则 27 以归约 (if_stmt)]
    SEMICOLON   [使用规则 27 以归约 (if_stmt)]
    IF          [使用规则 27 以归约 (if_stmt)]
    ELSE        [使用规则 27 以归约 (if_stmt)]
    WHILE       [使用规则 27 以归约 (if_stmt)]
    FOR         [使用规则 27 以归约 (if_stmt)]
    RETURN      [使用规则 27 以归约 (if_stmt)]
    CONTINUE    [使用规则 27 以归约 (if_stmt)]
    BREAK       [使用规则 27 以归约 (if_stmt)]
    SCANF       [使用规则 27 以归约 (if_stmt)]
    PRINTF      [使用规则 27 以归约 (if_stmt)]
    LP          [使用规则 27 以归约 (if_stmt)]
    LB          [使用规则 27 以归约 (if_stmt)]
    IDENTIFIER  [使用规则 27 以归约 (if_stmt)]
    INTEGER     [使用规则 27 以归约 (if_stmt)]
    CHAR        [使用规则 27 以归约 (if_stmt)]
    TRUE        [使用规则 27 以归约 (if_stmt)]
    FALSE       [使用规则 27 以归约 (if_stmt)]
    SUB         [使用规则 27 以归约 (if_stmt)]
    NOT         [使用规则 27 以归约 (if_stmt)]
    INC         [使用规则 27 以归约 (if_stmt)]
    DEC         [使用规则 27 以归约 (if_stmt)]
    $default    使用规则 27 以归约 (if_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 118

    3 statements: statements . statement
   36 while_stmt: WHILE LP expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 36 以归约 (while_stmt)]
    T_INT       [使用规则 36 以归约 (while_stmt)]
    T_BOOL      [使用规则 36 以归约 (while_stmt)]
    SEMICOLON   [使用规则 36 以归约 (while_stmt)]
    IF          [使用规则 36 以归约 (while_stmt)]
    WHILE       [使用规则 36 以归约 (while_stmt)]
    FOR         [使用规则 36 以归约 (while_stmt)]
    RETURN      [使用规则 36 以归约 (while_stmt)]
    CONTINUE    [使用规则 36 以归约 (while_stmt)]
    BREAK       [使用规则 36 以归约 (while_stmt)]
    SCANF       [使用规则 36 以归约 (while_stmt)]
    PRINTF      [使用规则 36 以归约 (while_stmt)]
    LP          [使用规则 36 以归约 (while_stmt)]
    LB          [使用规则 36 以归约 (while_stmt)]
    IDENTIFIER  [使用规则 36 以归约 (while_stmt)]
    INTEGER     [使用规则 36 以归约 (while_stmt)]
    CHAR        [使用规则 36 以归约 (while_stmt)]
    TRUE        [使用规则 36 以归约 (while_stmt)]
    FALSE       [使用规则 36 以归约 (while_stmt)]
    SUB         [使用规则 36 以归约 (while_stmt)]
    NOT         [使用规则 36 以归约 (while_stmt)]
    INC         [使用规则 36 以归约 (while_stmt)]
    DEC         [使用规则 36 以归约 (while_stmt)]
    $default    使用规则 36 以归约 (while_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 119

   35 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 129
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 120

   34 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 130
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 121

   29 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   33         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 131
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 132


状态 122

   30 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON . expr RP statements
   32         | FOR LP decl_stmt SEMICOLON SEMICOLON . RP statements

    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 133
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 134


状态 123

   28 for_stmt: FOR LP decl_stmt SEMICOLON expr . SEMICOLON expr RP statements
   31         | FOR LP decl_stmt SEMICOLON expr . SEMICOLON RP statements
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    SEMICOLON  偏移，并进入状态 135
    AND        偏移，并进入状态 63
    OR         偏移，并进入状态 64
    LT         偏移，并进入状态 65
    GT         偏移，并进入状态 66
    LE         偏移，并进入状态 67
    GE         偏移，并进入状态 68
    EQ         偏移，并进入状态 69
    NEQ        偏移，并进入状态 70
    ADD        偏移，并进入状态 71
    SUB        偏移，并进入状态 72
    MUL        偏移，并进入状态 73
    DIV        偏移，并进入状态 74
    MOD        偏移，并进入状态 75


状态 124

   46 io_stmt: SCANF LP STRING COMMA ADDR . expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 136


状态 125

   45 io_stmt: SCANF LP STRING COMMA expr . RP
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 137
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 126

   43 io_stmt: PRINTF LP STRING COMMA ADDR . expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 138


状态 127

   42 io_stmt: PRINTF LP STRING COMMA expr . RP
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 139
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 128

   26 if_stmt: IF LP expr RP statements ELSE . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 140
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 129

    3 statements: statements . statement
   35 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 35 以归约 (for_stmt)]
    T_INT       [使用规则 35 以归约 (for_stmt)]
    T_BOOL      [使用规则 35 以归约 (for_stmt)]
    SEMICOLON   [使用规则 35 以归约 (for_stmt)]
    IF          [使用规则 35 以归约 (for_stmt)]
    WHILE       [使用规则 35 以归约 (for_stmt)]
    FOR         [使用规则 35 以归约 (for_stmt)]
    RETURN      [使用规则 35 以归约 (for_stmt)]
    CONTINUE    [使用规则 35 以归约 (for_stmt)]
    BREAK       [使用规则 35 以归约 (for_stmt)]
    SCANF       [使用规则 35 以归约 (for_stmt)]
    PRINTF      [使用规则 35 以归约 (for_stmt)]
    LP          [使用规则 35 以归约 (for_stmt)]
    LB          [使用规则 35 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 35 以归约 (for_stmt)]
    INTEGER     [使用规则 35 以归约 (for_stmt)]
    CHAR        [使用规则 35 以归约 (for_stmt)]
    TRUE        [使用规则 35 以归约 (for_stmt)]
    FALSE       [使用规则 35 以归约 (for_stmt)]
    SUB         [使用规则 35 以归约 (for_stmt)]
    NOT         [使用规则 35 以归约 (for_stmt)]
    INC         [使用规则 35 以归约 (for_stmt)]
    DEC         [使用规则 35 以归约 (for_stmt)]
    $default    使用规则 35 以归约 (for_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 130

   34 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 141
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 131

   33 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 142
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 132

   29 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 143
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 133

   32 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 144
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 134

   30 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON expr . RP statements
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 145
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 135

   28 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON . expr RP statements
   31         | FOR LP decl_stmt SEMICOLON expr SEMICOLON . RP statements

    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 146
    IDENTIFIER  偏移，并进入状态 42
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 147


状态 136

   46 io_stmt: SCANF LP STRING COMMA ADDR expr . RP
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 148
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 137

   45 io_stmt: SCANF LP STRING COMMA expr RP .

    $default  使用规则 45 以归约 (io_stmt)


状态 138

   43 io_stmt: PRINTF LP STRING COMMA ADDR expr . RP
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 149
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 139

   42 io_stmt: PRINTF LP STRING COMMA expr RP .

    $default  使用规则 42 以归约 (io_stmt)


状态 140

    3 statements: statements . statement
   26 if_stmt: IF LP expr RP statements ELSE statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 26 以归约 (if_stmt)]
    T_INT       [使用规则 26 以归约 (if_stmt)]
    T_BOOL      [使用规则 26 以归约 (if_stmt)]
    SEMICOLON   [使用规则 26 以归约 (if_stmt)]
    IF          [使用规则 26 以归约 (if_stmt)]
    WHILE       [使用规则 26 以归约 (if_stmt)]
    FOR         [使用规则 26 以归约 (if_stmt)]
    RETURN      [使用规则 26 以归约 (if_stmt)]
    CONTINUE    [使用规则 26 以归约 (if_stmt)]
    BREAK       [使用规则 26 以归约 (if_stmt)]
    SCANF       [使用规则 26 以归约 (if_stmt)]
    PRINTF      [使用规则 26 以归约 (if_stmt)]
    LP          [使用规则 26 以归约 (if_stmt)]
    LB          [使用规则 26 以归约 (if_stmt)]
    IDENTIFIER  [使用规则 26 以归约 (if_stmt)]
    INTEGER     [使用规则 26 以归约 (if_stmt)]
    CHAR        [使用规则 26 以归约 (if_stmt)]
    TRUE        [使用规则 26 以归约 (if_stmt)]
    FALSE       [使用规则 26 以归约 (if_stmt)]
    SUB         [使用规则 26 以归约 (if_stmt)]
    NOT         [使用规则 26 以归约 (if_stmt)]
    INC         [使用规则 26 以归约 (if_stmt)]
    DEC         [使用规则 26 以归约 (if_stmt)]
    $default    使用规则 26 以归约 (if_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 141

    3 statements: statements . statement
   34 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 34 以归约 (for_stmt)]
    T_INT       [使用规则 34 以归约 (for_stmt)]
    T_BOOL      [使用规则 34 以归约 (for_stmt)]
    SEMICOLON   [使用规则 34 以归约 (for_stmt)]
    IF          [使用规则 34 以归约 (for_stmt)]
    WHILE       [使用规则 34 以归约 (for_stmt)]
    FOR         [使用规则 34 以归约 (for_stmt)]
    RETURN      [使用规则 34 以归约 (for_stmt)]
    CONTINUE    [使用规则 34 以归约 (for_stmt)]
    BREAK       [使用规则 34 以归约 (for_stmt)]
    SCANF       [使用规则 34 以归约 (for_stmt)]
    PRINTF      [使用规则 34 以归约 (for_stmt)]
    LP          [使用规则 34 以归约 (for_stmt)]
    LB          [使用规则 34 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 34 以归约 (for_stmt)]
    INTEGER     [使用规则 34 以归约 (for_stmt)]
    CHAR        [使用规则 34 以归约 (for_stmt)]
    TRUE        [使用规则 34 以归约 (for_stmt)]
    FALSE       [使用规则 34 以归约 (for_stmt)]
    SUB         [使用规则 34 以归约 (for_stmt)]
    NOT         [使用规则 34 以归约 (for_stmt)]
    INC         [使用规则 34 以归约 (for_stmt)]
    DEC         [使用规则 34 以归约 (for_stmt)]
    $default    使用规则 34 以归约 (for_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 142

    3 statements: statements . statement
   33 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 33 以归约 (for_stmt)]
    T_INT       [使用规则 33 以归约 (for_stmt)]
    T_BOOL      [使用规则 33 以归约 (for_stmt)]
    SEMICOLON   [使用规则 33 以归约 (for_stmt)]
    IF          [使用规则 33 以归约 (for_stmt)]
    WHILE       [使用规则 33 以归约 (for_stmt)]
    FOR         [使用规则 33 以归约 (for_stmt)]
    RETURN      [使用规则 33 以归约 (for_stmt)]
    CONTINUE    [使用规则 33 以归约 (for_stmt)]
    BREAK       [使用规则 33 以归约 (for_stmt)]
    SCANF       [使用规则 33 以归约 (for_stmt)]
    PRINTF      [使用规则 33 以归约 (for_stmt)]
    LP          [使用规则 33 以归约 (for_stmt)]
    LB          [使用规则 33 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 33 以归约 (for_stmt)]
    INTEGER     [使用规则 33 以归约 (for_stmt)]
    CHAR        [使用规则 33 以归约 (for_stmt)]
    TRUE        [使用规则 33 以归约 (for_stmt)]
    FALSE       [使用规则 33 以归约 (for_stmt)]
    SUB         [使用规则 33 以归约 (for_stmt)]
    NOT         [使用规则 33 以归约 (for_stmt)]
    INC         [使用规则 33 以归约 (for_stmt)]
    DEC         [使用规则 33 以归约 (for_stmt)]
    $default    使用规则 33 以归约 (for_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 143

   29 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 150
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 144

    3 statements: statements . statement
   32 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 32 以归约 (for_stmt)]
    T_INT       [使用规则 32 以归约 (for_stmt)]
    T_BOOL      [使用规则 32 以归约 (for_stmt)]
    SEMICOLON   [使用规则 32 以归约 (for_stmt)]
    IF          [使用规则 32 以归约 (for_stmt)]
    WHILE       [使用规则 32 以归约 (for_stmt)]
    FOR         [使用规则 32 以归约 (for_stmt)]
    RETURN      [使用规则 32 以归约 (for_stmt)]
    CONTINUE    [使用规则 32 以归约 (for_stmt)]
    BREAK       [使用规则 32 以归约 (for_stmt)]
    SCANF       [使用规则 32 以归约 (for_stmt)]
    PRINTF      [使用规则 32 以归约 (for_stmt)]
    LP          [使用规则 32 以归约 (for_stmt)]
    LB          [使用规则 32 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 32 以归约 (for_stmt)]
    INTEGER     [使用规则 32 以归约 (for_stmt)]
    CHAR        [使用规则 32 以归约 (for_stmt)]
    TRUE        [使用规则 32 以归约 (for_stmt)]
    FALSE       [使用规则 32 以归约 (for_stmt)]
    SUB         [使用规则 32 以归约 (for_stmt)]
    NOT         [使用规则 32 以归约 (for_stmt)]
    INC         [使用规则 32 以归约 (for_stmt)]
    DEC         [使用规则 32 以归约 (for_stmt)]
    $default    使用规则 32 以归约 (for_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 145

   30 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 151
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 146

   31 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 152
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 147

   28 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON expr . RP statements
   48 expr: expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | expr . LE expr
   64     | expr . GE expr
   65     | expr . EQ expr
   66     | expr . NEQ expr

    RP   偏移，并进入状态 153
    AND  偏移，并进入状态 63
    OR   偏移，并进入状态 64
    LT   偏移，并进入状态 65
    GT   偏移，并进入状态 66
    LE   偏移，并进入状态 67
    GE   偏移，并进入状态 68
    EQ   偏移，并进入状态 69
    NEQ  偏移，并进入状态 70
    ADD  偏移，并进入状态 71
    SUB  偏移，并进入状态 72
    MUL  偏移，并进入状态 73
    DIV  偏移，并进入状态 74
    MOD  偏移，并进入状态 75


状态 148

   46 io_stmt: SCANF LP STRING COMMA ADDR expr RP .

    $default  使用规则 46 以归约 (io_stmt)


状态 149

   43 io_stmt: PRINTF LP STRING COMMA ADDR expr RP .

    $default  使用规则 43 以归约 (io_stmt)


状态 150

    3 statements: statements . statement
   29 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 29 以归约 (for_stmt)]
    T_INT       [使用规则 29 以归约 (for_stmt)]
    T_BOOL      [使用规则 29 以归约 (for_stmt)]
    SEMICOLON   [使用规则 29 以归约 (for_stmt)]
    IF          [使用规则 29 以归约 (for_stmt)]
    WHILE       [使用规则 29 以归约 (for_stmt)]
    FOR         [使用规则 29 以归约 (for_stmt)]
    RETURN      [使用规则 29 以归约 (for_stmt)]
    CONTINUE    [使用规则 29 以归约 (for_stmt)]
    BREAK       [使用规则 29 以归约 (for_stmt)]
    SCANF       [使用规则 29 以归约 (for_stmt)]
    PRINTF      [使用规则 29 以归约 (for_stmt)]
    LP          [使用规则 29 以归约 (for_stmt)]
    LB          [使用规则 29 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 29 以归约 (for_stmt)]
    INTEGER     [使用规则 29 以归约 (for_stmt)]
    CHAR        [使用规则 29 以归约 (for_stmt)]
    TRUE        [使用规则 29 以归约 (for_stmt)]
    FALSE       [使用规则 29 以归约 (for_stmt)]
    SUB         [使用规则 29 以归约 (for_stmt)]
    NOT         [使用规则 29 以归约 (for_stmt)]
    INC         [使用规则 29 以归约 (for_stmt)]
    DEC         [使用规则 29 以归约 (for_stmt)]
    $default    使用规则 29 以归约 (for_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 151

    3 statements: statements . statement
   30 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 30 以归约 (for_stmt)]
    T_INT       [使用规则 30 以归约 (for_stmt)]
    T_BOOL      [使用规则 30 以归约 (for_stmt)]
    SEMICOLON   [使用规则 30 以归约 (for_stmt)]
    IF          [使用规则 30 以归约 (for_stmt)]
    WHILE       [使用规则 30 以归约 (for_stmt)]
    FOR         [使用规则 30 以归约 (for_stmt)]
    RETURN      [使用规则 30 以归约 (for_stmt)]
    CONTINUE    [使用规则 30 以归约 (for_stmt)]
    BREAK       [使用规则 30 以归约 (for_stmt)]
    SCANF       [使用规则 30 以归约 (for_stmt)]
    PRINTF      [使用规则 30 以归约 (for_stmt)]
    LP          [使用规则 30 以归约 (for_stmt)]
    LB          [使用规则 30 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 30 以归约 (for_stmt)]
    INTEGER     [使用规则 30 以归约 (for_stmt)]
    CHAR        [使用规则 30 以归约 (for_stmt)]
    TRUE        [使用规则 30 以归约 (for_stmt)]
    FALSE       [使用规则 30 以归约 (for_stmt)]
    SUB         [使用规则 30 以归约 (for_stmt)]
    NOT         [使用规则 30 以归约 (for_stmt)]
    INC         [使用规则 30 以归约 (for_stmt)]
    DEC         [使用规则 30 以归约 (for_stmt)]
    $default    使用规则 30 以归约 (for_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 152

    3 statements: statements . statement
   31 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 31 以归约 (for_stmt)]
    T_INT       [使用规则 31 以归约 (for_stmt)]
    T_BOOL      [使用规则 31 以归约 (for_stmt)]
    SEMICOLON   [使用规则 31 以归约 (for_stmt)]
    IF          [使用规则 31 以归约 (for_stmt)]
    WHILE       [使用规则 31 以归约 (for_stmt)]
    FOR         [使用规则 31 以归约 (for_stmt)]
    RETURN      [使用规则 31 以归约 (for_stmt)]
    CONTINUE    [使用规则 31 以归约 (for_stmt)]
    BREAK       [使用规则 31 以归约 (for_stmt)]
    SCANF       [使用规则 31 以归约 (for_stmt)]
    PRINTF      [使用规则 31 以归约 (for_stmt)]
    LP          [使用规则 31 以归约 (for_stmt)]
    LB          [使用规则 31 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 31 以归约 (for_stmt)]
    INTEGER     [使用规则 31 以归约 (for_stmt)]
    CHAR        [使用规则 31 以归约 (for_stmt)]
    TRUE        [使用规则 31 以归约 (for_stmt)]
    FALSE       [使用规则 31 以归约 (for_stmt)]
    SUB         [使用规则 31 以归约 (for_stmt)]
    NOT         [使用规则 31 以归约 (for_stmt)]
    INC         [使用规则 31 以归约 (for_stmt)]
    DEC         [使用规则 31 以归约 (for_stmt)]
    $default    使用规则 31 以归约 (for_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 153

   28 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 154
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38


状态 154

    3 statements: statements . statement
   28 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 28 以归约 (for_stmt)]
    T_INT       [使用规则 28 以归约 (for_stmt)]
    T_BOOL      [使用规则 28 以归约 (for_stmt)]
    SEMICOLON   [使用规则 28 以归约 (for_stmt)]
    IF          [使用规则 28 以归约 (for_stmt)]
    WHILE       [使用规则 28 以归约 (for_stmt)]
    FOR         [使用规则 28 以归约 (for_stmt)]
    RETURN      [使用规则 28 以归约 (for_stmt)]
    CONTINUE    [使用规则 28 以归约 (for_stmt)]
    BREAK       [使用规则 28 以归约 (for_stmt)]
    SCANF       [使用规则 28 以归约 (for_stmt)]
    PRINTF      [使用规则 28 以归约 (for_stmt)]
    LP          [使用规则 28 以归约 (for_stmt)]
    LB          [使用规则 28 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 28 以归约 (for_stmt)]
    INTEGER     [使用规则 28 以归约 (for_stmt)]
    CHAR        [使用规则 28 以归约 (for_stmt)]
    TRUE        [使用规则 28 以归约 (for_stmt)]
    FALSE       [使用规则 28 以归约 (for_stmt)]
    SUB         [使用规则 28 以归约 (for_stmt)]
    NOT         [使用规则 28 以归约 (for_stmt)]
    INC         [使用规则 28 以归约 (for_stmt)]
    DEC         [使用规则 28 以归约 (for_stmt)]
    $default    使用规则 28 以归约 (for_stmt)

    statement    转到状态 61
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    T            转到状态 38
