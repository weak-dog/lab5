终端机在文法中未使用

    BOOL


状态 45 冲突：13 项偏移/归约
状态 57 冲突：1 项偏移/归约
状态 58 冲突：1 项偏移/归约
状态 94 冲突：1 项偏移/归约
状态 95 冲突：1 项偏移/归约
状态 121 冲突：14 项偏移/归约
状态 122 冲突：13 项偏移/归约
状态 132 冲突：13 项偏移/归约
状态 136 冲突：13 项偏移/归约


语法

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | MAIN statements
    4           | LBRACE statements RBRACE
    5           | statements statement

    6 statement: SEMICOLON
    7          | assign
    8          | declaration
    9          | IF LBRACKET bool_expr RBRACKET statements ELSE statements
   10          | IF LBRACKET bool_expr RBRACKET statements
   11          | WHILE LBRACKET bool_expr RBRACKET statements
   12          | BREAK
   13          | CONTINUE
   14          | RETURN expr
   15          | FOR LBRACKET declaration SEMICOLON expr SEMICOLON expr RBRACKET statements
   16          | IOFUNC

   17 IOFUNC: PRINTF LBRACKET expr RBRACKET
   18       | PRINTF LBRACKET STRING COMMA expr RBRACKET
   19       | SCANF LBRACKET expr RBRACKET
   20       | SCANF LBRACKET STRING COMMA expr RBRACKET
   21       | SCANF LBRACKET STRING COMMA ADDR expr RBRACKET

   22 assign: IDENTIFIER ASSIGN expr
   23       | IDENTIFIER ADDASSIGN expr
   24       | IDENTIFIER SUBASSIGN expr
   25       | IDENTIFIER MULASSIGN expr
   26       | IDENTIFIER DIVASSIGN expr

   27 assigns: assign
   28        | assigns COMMA assign

   29 idlist: IDENTIFIER
   30       | idlist COMMA IDENTIFIER

   31 declaration: T idlist
   32            | T assigns
   33            | declaration COMMA idlist
   34            | declaration COMMA assigns

   35 expr: addsub_expr
   36     | bool_expr

   37 addsub_expr: mdm_expr
   38            | addsub_expr ADD mdm_expr
   39            | addsub_expr SUB mdm_expr

   40 mdm_expr: unary_expr
   41         | mdm_expr MUL unary_expr
   42         | mdm_expr DIV unary_expr
   43         | mdm_expr MOD unary_expr
   44         | SUB unary_expr

   45 unary_expr: MINUS unary_expr
   46           | IDENTIFIER
   47           | NOT IDENTIFIER
   48           | INTEGER
   49           | CHAR
   50           | LBRACKET expr RBRACKET
   51           | INC IDENTIFIER
   52           | IDENTIFIER INC
   53           | DEC IDENTIFIER
   54           | IDENTIFIER DEC

   55 bool_expr: TRUE
   56          | FALSE
   57          | logic_expr
   58          | bool_expr AND logic_expr
   59          | bool_expr OR logic_expr

   60 logic_expr: addsub_expr LT addsub_expr
   61           | addsub_expr GT addsub_expr
   62           | addsub_expr LE addsub_expr
   63           | addsub_expr GE addsub_expr
   64           | addsub_expr EQ addsub_expr
   65           | addsub_expr NEQ addsub_expr

   66 T: T_INT
   67  | T_CHAR
   68  | T_BOOL


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    T_CHAR (258) 67
    T_INT (259) 66
    T_BOOL (260) 68
    ADDR (261) 21
    SEMICOLON (262) 6 15
    COMMA (263) 18 20 21 28 30 33 34
    IF (264) 9 10
    ELSE (265) 9
    WHILE (266) 11
    FOR (267) 15
    RETURN (268) 14
    CONTINUE (269) 13
    BREAK (270) 12
    SCANF (271) 19 20 21
    PRINTF (272) 17 18
    MAIN (273) 3
    LBRACKET (274) 9 10 11 15 17 18 19 20 21 50
    RBRACKET (275) 9 10 11 15 17 18 19 20 21 50
    LBRACE (276) 4
    RBRACE (277) 4
    IDENTIFIER (278) 22 23 24 25 26 29 30 46 47 51 52 53 54
    INTEGER (279) 48
    CHAR (280) 49
    BOOL (281)
    STRING (282) 18 20 21
    TRUE (283) 55
    FALSE (284) 56
    ASSIGN (285) 22
    ADDASSIGN (286) 23
    SUBASSIGN (287) 24
    MULASSIGN (288) 25
    DIVASSIGN (289) 26
    AND (290) 58
    OR (291) 59
    LT (292) 60
    GT (293) 61
    LE (294) 62
    GE (295) 63
    EQ (296) 64
    NEQ (297) 65
    ADD (298) 38
    SUB (299) 39 44
    MUL (300) 41
    DIV (301) 42
    MOD (302) 43
    NOT (303) 47
    INC (304) 51 52
    DEC (305) 53 54
    MINUS (306) 45


非终结语词，附有它们出现处的规则

    $accept (52)
        on left: 0
    program (53)
        on left: 1
        on right: 0
    statements (54)
        on left: 2 3 4 5
        on right: 1 3 4 5 9 10 11 15
    statement (55)
        on left: 6 7 8 9 10 11 12 13 14 15 16
        on right: 2 5
    IOFUNC (56)
        on left: 17 18 19 20 21
        on right: 16
    assign (57)
        on left: 22 23 24 25 26
        on right: 7 27 28
    assigns (58)
        on left: 27 28
        on right: 28 32 34
    idlist (59)
        on left: 29 30
        on right: 30 31 33
    declaration (60)
        on left: 31 32 33 34
        on right: 8 15 33 34
    expr (61)
        on left: 35 36
        on right: 14 15 17 18 19 20 21 22 23 24 25 26 50
    addsub_expr (62)
        on left: 37 38 39
        on right: 35 38 39 60 61 62 63 64 65
    mdm_expr (63)
        on left: 40 41 42 43 44
        on right: 37 38 39 41 42 43
    unary_expr (64)
        on left: 45 46 47 48 49 50 51 52 53 54
        on right: 40 41 42 43 44 45
    bool_expr (65)
        on left: 55 56 57 58 59
        on right: 9 10 11 36 58 59
    logic_expr (66)
        on left: 60 61 62 63 64 65
        on right: 57 58 59
    T (67)
        on left: 66 67 68
        on right: 31 32


状态 0

    0 $accept: . program $end

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LBRACE      偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 15

    program      转到状态 16
    statements   转到状态 17
    statement    转到状态 18
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 1

   67 T: T_CHAR .

    $default  使用规则 67 以归约 (T)


状态 2

   66 T: T_INT .

    $default  使用规则 66 以归约 (T)


状态 3

   68 T: T_BOOL .

    $default  使用规则 68 以归约 (T)


状态 4

    6 statement: SEMICOLON .

    $default  使用规则 6 以归约 (statement)


状态 5

    9 statement: IF . LBRACKET bool_expr RBRACKET statements ELSE statements
   10          | IF . LBRACKET bool_expr RBRACKET statements

    LBRACKET  偏移，并进入状态 23


状态 6

   11 statement: WHILE . LBRACKET bool_expr RBRACKET statements

    LBRACKET  偏移，并进入状态 24


状态 7

   15 statement: FOR . LBRACKET declaration SEMICOLON expr SEMICOLON expr RBRACKET statements

    LBRACKET  偏移，并进入状态 25


状态 8

   14 statement: RETURN . expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 9

   13 statement: CONTINUE .

    $default  使用规则 13 以归约 (statement)


状态 10

   12 statement: BREAK .

    $default  使用规则 12 以归约 (statement)


状态 11

   19 IOFUNC: SCANF . LBRACKET expr RBRACKET
   20       | SCANF . LBRACKET STRING COMMA expr RBRACKET
   21       | SCANF . LBRACKET STRING COMMA ADDR expr RBRACKET

    LBRACKET  偏移，并进入状态 43


状态 12

   17 IOFUNC: PRINTF . LBRACKET expr RBRACKET
   18       | PRINTF . LBRACKET STRING COMMA expr RBRACKET

    LBRACKET  偏移，并进入状态 44


状态 13

    3 statements: MAIN . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LBRACE      偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 15

    statements   转到状态 45
    statement    转到状态 18
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 14

    4 statements: LBRACE . statements RBRACE

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LBRACE      偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 15

    statements   转到状态 46
    statement    转到状态 18
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 15

   22 assign: IDENTIFIER . ASSIGN expr
   23       | IDENTIFIER . ADDASSIGN expr
   24       | IDENTIFIER . SUBASSIGN expr
   25       | IDENTIFIER . MULASSIGN expr
   26       | IDENTIFIER . DIVASSIGN expr

    ASSIGN     偏移，并进入状态 47
    ADDASSIGN  偏移，并进入状态 48
    SUBASSIGN  偏移，并进入状态 49
    MULASSIGN  偏移，并进入状态 50
    DIVASSIGN  偏移，并进入状态 51


状态 16

    0 $accept: program . $end

    $end  偏移，并进入状态 52


状态 17

    1 program: statements .
    5 statements: statements . statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    IDENTIFIER  偏移，并进入状态 15

    $default  使用规则 1 以归约 (program)

    statement    转到状态 53
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 18

    2 statements: statement .

    $default  使用规则 2 以归约 (statements)


状态 19

   16 statement: IOFUNC .

    $default  使用规则 16 以归约 (statement)


状态 20

    7 statement: assign .

    $default  使用规则 7 以归约 (statement)


状态 21

    8 statement: declaration .
   33 declaration: declaration . COMMA idlist
   34            | declaration . COMMA assigns

    COMMA  偏移，并进入状态 54

    $default  使用规则 8 以归约 (statement)


状态 22

   31 declaration: T . idlist
   32            | T . assigns

    IDENTIFIER  偏移，并进入状态 55

    assign   转到状态 56
    assigns  转到状态 57
    idlist   转到状态 58


状态 23

    9 statement: IF LBRACKET . bool_expr RBRACKET statements ELSE statements
   10          | IF LBRACKET . bool_expr RBRACKET statements

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    addsub_expr  转到状态 59
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 60
    logic_expr   转到状态 42


状态 24

   11 statement: WHILE LBRACKET . bool_expr RBRACKET statements

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    addsub_expr  转到状态 59
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 61
    logic_expr   转到状态 42


状态 25

   15 statement: FOR LBRACKET . declaration SEMICOLON expr SEMICOLON expr RBRACKET statements

    T_CHAR  偏移，并进入状态 1
    T_INT   偏移，并进入状态 2
    T_BOOL  偏移，并进入状态 3

    declaration  转到状态 62
    T            转到状态 22


状态 26

   50 unary_expr: LBRACKET . expr RBRACKET

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 63
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 27

   46 unary_expr: IDENTIFIER .
   52           | IDENTIFIER . INC
   54           | IDENTIFIER . DEC

    INC  偏移，并进入状态 64
    DEC  偏移，并进入状态 65

    $default  使用规则 46 以归约 (unary_expr)


状态 28

   48 unary_expr: INTEGER .

    $default  使用规则 48 以归约 (unary_expr)


状态 29

   49 unary_expr: CHAR .

    $default  使用规则 49 以归约 (unary_expr)


状态 30

   55 bool_expr: TRUE .

    $default  使用规则 55 以归约 (bool_expr)


状态 31

   56 bool_expr: FALSE .

    $default  使用规则 56 以归约 (bool_expr)


状态 32

   44 mdm_expr: SUB . unary_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    unary_expr  转到状态 66


状态 33

   47 unary_expr: NOT . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 67


状态 34

   51 unary_expr: INC . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 68


状态 35

   53 unary_expr: DEC . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 69


状态 36

   45 unary_expr: MINUS . unary_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    unary_expr  转到状态 70


状态 37

   14 statement: RETURN expr .

    $default  使用规则 14 以归约 (statement)


状态 38

   35 expr: addsub_expr .
   38 addsub_expr: addsub_expr . ADD mdm_expr
   39            | addsub_expr . SUB mdm_expr
   60 logic_expr: addsub_expr . LT addsub_expr
   61           | addsub_expr . GT addsub_expr
   62           | addsub_expr . LE addsub_expr
   63           | addsub_expr . GE addsub_expr
   64           | addsub_expr . EQ addsub_expr
   65           | addsub_expr . NEQ addsub_expr

    LT   偏移，并进入状态 71
    GT   偏移，并进入状态 72
    LE   偏移，并进入状态 73
    GE   偏移，并进入状态 74
    EQ   偏移，并进入状态 75
    NEQ  偏移，并进入状态 76
    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 35 以归约 (expr)


状态 39

   37 addsub_expr: mdm_expr .
   41 mdm_expr: mdm_expr . MUL unary_expr
   42         | mdm_expr . DIV unary_expr
   43         | mdm_expr . MOD unary_expr

    MUL  偏移，并进入状态 79
    DIV  偏移，并进入状态 80
    MOD  偏移，并进入状态 81

    $default  使用规则 37 以归约 (addsub_expr)


状态 40

   40 mdm_expr: unary_expr .

    $default  使用规则 40 以归约 (mdm_expr)


状态 41

   36 expr: bool_expr .
   58 bool_expr: bool_expr . AND logic_expr
   59          | bool_expr . OR logic_expr

    AND  偏移，并进入状态 82
    OR   偏移，并进入状态 83

    $default  使用规则 36 以归约 (expr)


状态 42

   57 bool_expr: logic_expr .

    $default  使用规则 57 以归约 (bool_expr)


状态 43

   19 IOFUNC: SCANF LBRACKET . expr RBRACKET
   20       | SCANF LBRACKET . STRING COMMA expr RBRACKET
   21       | SCANF LBRACKET . STRING COMMA ADDR expr RBRACKET

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    STRING      偏移，并进入状态 84
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 85
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 44

   17 IOFUNC: PRINTF LBRACKET . expr RBRACKET
   18       | PRINTF LBRACKET . STRING COMMA expr RBRACKET

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    STRING      偏移，并进入状态 86
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 87
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 45

    3 statements: MAIN statements .
    5           | statements . statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    IDENTIFIER  偏移，并进入状态 15

    T_CHAR      [使用规则 3 以归约 (statements)]
    T_INT       [使用规则 3 以归约 (statements)]
    T_BOOL      [使用规则 3 以归约 (statements)]
    SEMICOLON   [使用规则 3 以归约 (statements)]
    IF          [使用规则 3 以归约 (statements)]
    WHILE       [使用规则 3 以归约 (statements)]
    FOR         [使用规则 3 以归约 (statements)]
    RETURN      [使用规则 3 以归约 (statements)]
    CONTINUE    [使用规则 3 以归约 (statements)]
    BREAK       [使用规则 3 以归约 (statements)]
    SCANF       [使用规则 3 以归约 (statements)]
    PRINTF      [使用规则 3 以归约 (statements)]
    IDENTIFIER  [使用规则 3 以归约 (statements)]
    $default    使用规则 3 以归约 (statements)

    statement    转到状态 53
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 46

    4 statements: LBRACE statements . RBRACE
    5           | statements . statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    RBRACE      偏移，并进入状态 88
    IDENTIFIER  偏移，并进入状态 15

    statement    转到状态 53
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 47

   22 assign: IDENTIFIER ASSIGN . expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 89
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 48

   23 assign: IDENTIFIER ADDASSIGN . expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 90
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 49

   24 assign: IDENTIFIER SUBASSIGN . expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 91
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 50

   25 assign: IDENTIFIER MULASSIGN . expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 92
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 51

   26 assign: IDENTIFIER DIVASSIGN . expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 93
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 52

    0 $accept: program $end .

    $default  接受


状态 53

    5 statements: statements statement .

    $default  使用规则 5 以归约 (statements)


状态 54

   33 declaration: declaration COMMA . idlist
   34            | declaration COMMA . assigns

    IDENTIFIER  偏移，并进入状态 55

    assign   转到状态 56
    assigns  转到状态 94
    idlist   转到状态 95


状态 55

   22 assign: IDENTIFIER . ASSIGN expr
   23       | IDENTIFIER . ADDASSIGN expr
   24       | IDENTIFIER . SUBASSIGN expr
   25       | IDENTIFIER . MULASSIGN expr
   26       | IDENTIFIER . DIVASSIGN expr
   29 idlist: IDENTIFIER .

    ASSIGN     偏移，并进入状态 47
    ADDASSIGN  偏移，并进入状态 48
    SUBASSIGN  偏移，并进入状态 49
    MULASSIGN  偏移，并进入状态 50
    DIVASSIGN  偏移，并进入状态 51

    $default  使用规则 29 以归约 (idlist)


状态 56

   27 assigns: assign .

    $default  使用规则 27 以归约 (assigns)


状态 57

   28 assigns: assigns . COMMA assign
   32 declaration: T assigns .

    COMMA  偏移，并进入状态 96

    COMMA     [使用规则 32 以归约 (declaration)]
    $default  使用规则 32 以归约 (declaration)


状态 58

   30 idlist: idlist . COMMA IDENTIFIER
   31 declaration: T idlist .

    COMMA  偏移，并进入状态 97

    COMMA     [使用规则 31 以归约 (declaration)]
    $default  使用规则 31 以归约 (declaration)


状态 59

   38 addsub_expr: addsub_expr . ADD mdm_expr
   39            | addsub_expr . SUB mdm_expr
   60 logic_expr: addsub_expr . LT addsub_expr
   61           | addsub_expr . GT addsub_expr
   62           | addsub_expr . LE addsub_expr
   63           | addsub_expr . GE addsub_expr
   64           | addsub_expr . EQ addsub_expr
   65           | addsub_expr . NEQ addsub_expr

    LT   偏移，并进入状态 71
    GT   偏移，并进入状态 72
    LE   偏移，并进入状态 73
    GE   偏移，并进入状态 74
    EQ   偏移，并进入状态 75
    NEQ  偏移，并进入状态 76
    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78


状态 60

    9 statement: IF LBRACKET bool_expr . RBRACKET statements ELSE statements
   10          | IF LBRACKET bool_expr . RBRACKET statements
   58 bool_expr: bool_expr . AND logic_expr
   59          | bool_expr . OR logic_expr

    RBRACKET  偏移，并进入状态 98
    AND       偏移，并进入状态 82
    OR        偏移，并进入状态 83


状态 61

   11 statement: WHILE LBRACKET bool_expr . RBRACKET statements
   58 bool_expr: bool_expr . AND logic_expr
   59          | bool_expr . OR logic_expr

    RBRACKET  偏移，并进入状态 99
    AND       偏移，并进入状态 82
    OR        偏移，并进入状态 83


状态 62

   15 statement: FOR LBRACKET declaration . SEMICOLON expr SEMICOLON expr RBRACKET statements
   33 declaration: declaration . COMMA idlist
   34            | declaration . COMMA assigns

    SEMICOLON  偏移，并进入状态 100
    COMMA      偏移，并进入状态 54


状态 63

   50 unary_expr: LBRACKET expr . RBRACKET

    RBRACKET  偏移，并进入状态 101


状态 64

   52 unary_expr: IDENTIFIER INC .

    $default  使用规则 52 以归约 (unary_expr)


状态 65

   54 unary_expr: IDENTIFIER DEC .

    $default  使用规则 54 以归约 (unary_expr)


状态 66

   44 mdm_expr: SUB unary_expr .

    $default  使用规则 44 以归约 (mdm_expr)


状态 67

   47 unary_expr: NOT IDENTIFIER .

    $default  使用规则 47 以归约 (unary_expr)


状态 68

   51 unary_expr: INC IDENTIFIER .

    $default  使用规则 51 以归约 (unary_expr)


状态 69

   53 unary_expr: DEC IDENTIFIER .

    $default  使用规则 53 以归约 (unary_expr)


状态 70

   45 unary_expr: MINUS unary_expr .

    $default  使用规则 45 以归约 (unary_expr)


状态 71

   60 logic_expr: addsub_expr LT . addsub_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    addsub_expr  转到状态 102
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 72

   61 logic_expr: addsub_expr GT . addsub_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    addsub_expr  转到状态 103
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 73

   62 logic_expr: addsub_expr LE . addsub_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    addsub_expr  转到状态 104
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 74

   63 logic_expr: addsub_expr GE . addsub_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    addsub_expr  转到状态 105
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 75

   64 logic_expr: addsub_expr EQ . addsub_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    addsub_expr  转到状态 106
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 76

   65 logic_expr: addsub_expr NEQ . addsub_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    addsub_expr  转到状态 107
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 77

   38 addsub_expr: addsub_expr ADD . mdm_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    mdm_expr    转到状态 108
    unary_expr  转到状态 40


状态 78

   39 addsub_expr: addsub_expr SUB . mdm_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    mdm_expr    转到状态 109
    unary_expr  转到状态 40


状态 79

   41 mdm_expr: mdm_expr MUL . unary_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    unary_expr  转到状态 110


状态 80

   42 mdm_expr: mdm_expr DIV . unary_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    unary_expr  转到状态 111


状态 81

   43 mdm_expr: mdm_expr MOD . unary_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    unary_expr  转到状态 112


状态 82

   58 bool_expr: bool_expr AND . logic_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    addsub_expr  转到状态 59
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    logic_expr   转到状态 113


状态 83

   59 bool_expr: bool_expr OR . logic_expr

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    addsub_expr  转到状态 59
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    logic_expr   转到状态 114


状态 84

   20 IOFUNC: SCANF LBRACKET STRING . COMMA expr RBRACKET
   21       | SCANF LBRACKET STRING . COMMA ADDR expr RBRACKET

    COMMA  偏移，并进入状态 115


状态 85

   19 IOFUNC: SCANF LBRACKET expr . RBRACKET

    RBRACKET  偏移，并进入状态 116


状态 86

   18 IOFUNC: PRINTF LBRACKET STRING . COMMA expr RBRACKET

    COMMA  偏移，并进入状态 117


状态 87

   17 IOFUNC: PRINTF LBRACKET expr . RBRACKET

    RBRACKET  偏移，并进入状态 118


状态 88

    4 statements: LBRACE statements RBRACE .

    $default  使用规则 4 以归约 (statements)


状态 89

   22 assign: IDENTIFIER ASSIGN expr .

    $default  使用规则 22 以归约 (assign)


状态 90

   23 assign: IDENTIFIER ADDASSIGN expr .

    $default  使用规则 23 以归约 (assign)


状态 91

   24 assign: IDENTIFIER SUBASSIGN expr .

    $default  使用规则 24 以归约 (assign)


状态 92

   25 assign: IDENTIFIER MULASSIGN expr .

    $default  使用规则 25 以归约 (assign)


状态 93

   26 assign: IDENTIFIER DIVASSIGN expr .

    $default  使用规则 26 以归约 (assign)


状态 94

   28 assigns: assigns . COMMA assign
   34 declaration: declaration COMMA assigns .

    COMMA  偏移，并进入状态 96

    COMMA     [使用规则 34 以归约 (declaration)]
    $default  使用规则 34 以归约 (declaration)


状态 95

   30 idlist: idlist . COMMA IDENTIFIER
   33 declaration: declaration COMMA idlist .

    COMMA  偏移，并进入状态 97

    COMMA     [使用规则 33 以归约 (declaration)]
    $default  使用规则 33 以归约 (declaration)


状态 96

   28 assigns: assigns COMMA . assign

    IDENTIFIER  偏移，并进入状态 15

    assign  转到状态 119


状态 97

   30 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 120


状态 98

    9 statement: IF LBRACKET bool_expr RBRACKET . statements ELSE statements
   10          | IF LBRACKET bool_expr RBRACKET . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LBRACE      偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 15

    statements   转到状态 121
    statement    转到状态 18
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 99

   11 statement: WHILE LBRACKET bool_expr RBRACKET . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LBRACE      偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 15

    statements   转到状态 122
    statement    转到状态 18
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 100

   15 statement: FOR LBRACKET declaration SEMICOLON . expr SEMICOLON expr RBRACKET statements

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 123
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 101

   50 unary_expr: LBRACKET expr RBRACKET .

    $default  使用规则 50 以归约 (unary_expr)


状态 102

   38 addsub_expr: addsub_expr . ADD mdm_expr
   39            | addsub_expr . SUB mdm_expr
   60 logic_expr: addsub_expr LT addsub_expr .

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 60 以归约 (logic_expr)


状态 103

   38 addsub_expr: addsub_expr . ADD mdm_expr
   39            | addsub_expr . SUB mdm_expr
   61 logic_expr: addsub_expr GT addsub_expr .

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 61 以归约 (logic_expr)


状态 104

   38 addsub_expr: addsub_expr . ADD mdm_expr
   39            | addsub_expr . SUB mdm_expr
   62 logic_expr: addsub_expr LE addsub_expr .

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 62 以归约 (logic_expr)


状态 105

   38 addsub_expr: addsub_expr . ADD mdm_expr
   39            | addsub_expr . SUB mdm_expr
   63 logic_expr: addsub_expr GE addsub_expr .

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 63 以归约 (logic_expr)


状态 106

   38 addsub_expr: addsub_expr . ADD mdm_expr
   39            | addsub_expr . SUB mdm_expr
   64 logic_expr: addsub_expr EQ addsub_expr .

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 64 以归约 (logic_expr)


状态 107

   38 addsub_expr: addsub_expr . ADD mdm_expr
   39            | addsub_expr . SUB mdm_expr
   65 logic_expr: addsub_expr NEQ addsub_expr .

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 65 以归约 (logic_expr)


状态 108

   38 addsub_expr: addsub_expr ADD mdm_expr .
   41 mdm_expr: mdm_expr . MUL unary_expr
   42         | mdm_expr . DIV unary_expr
   43         | mdm_expr . MOD unary_expr

    MUL  偏移，并进入状态 79
    DIV  偏移，并进入状态 80
    MOD  偏移，并进入状态 81

    $default  使用规则 38 以归约 (addsub_expr)


状态 109

   39 addsub_expr: addsub_expr SUB mdm_expr .
   41 mdm_expr: mdm_expr . MUL unary_expr
   42         | mdm_expr . DIV unary_expr
   43         | mdm_expr . MOD unary_expr

    MUL  偏移，并进入状态 79
    DIV  偏移，并进入状态 80
    MOD  偏移，并进入状态 81

    $default  使用规则 39 以归约 (addsub_expr)


状态 110

   41 mdm_expr: mdm_expr MUL unary_expr .

    $default  使用规则 41 以归约 (mdm_expr)


状态 111

   42 mdm_expr: mdm_expr DIV unary_expr .

    $default  使用规则 42 以归约 (mdm_expr)


状态 112

   43 mdm_expr: mdm_expr MOD unary_expr .

    $default  使用规则 43 以归约 (mdm_expr)


状态 113

   58 bool_expr: bool_expr AND logic_expr .

    $default  使用规则 58 以归约 (bool_expr)


状态 114

   59 bool_expr: bool_expr OR logic_expr .

    $default  使用规则 59 以归约 (bool_expr)


状态 115

   20 IOFUNC: SCANF LBRACKET STRING COMMA . expr RBRACKET
   21       | SCANF LBRACKET STRING COMMA . ADDR expr RBRACKET

    ADDR        偏移，并进入状态 124
    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 125
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 116

   19 IOFUNC: SCANF LBRACKET expr RBRACKET .

    $default  使用规则 19 以归约 (IOFUNC)


状态 117

   18 IOFUNC: PRINTF LBRACKET STRING COMMA . expr RBRACKET

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 126
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 118

   17 IOFUNC: PRINTF LBRACKET expr RBRACKET .

    $default  使用规则 17 以归约 (IOFUNC)


状态 119

   28 assigns: assigns COMMA assign .

    $default  使用规则 28 以归约 (assigns)


状态 120

   30 idlist: idlist COMMA IDENTIFIER .

    $default  使用规则 30 以归约 (idlist)


状态 121

    5 statements: statements . statement
    9 statement: IF LBRACKET bool_expr RBRACKET statements . ELSE statements
   10          | IF LBRACKET bool_expr RBRACKET statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    ELSE        偏移，并进入状态 127
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    IDENTIFIER  偏移，并进入状态 15

    T_CHAR      [使用规则 10 以归约 (statement)]
    T_INT       [使用规则 10 以归约 (statement)]
    T_BOOL      [使用规则 10 以归约 (statement)]
    SEMICOLON   [使用规则 10 以归约 (statement)]
    IF          [使用规则 10 以归约 (statement)]
    ELSE        [使用规则 10 以归约 (statement)]
    WHILE       [使用规则 10 以归约 (statement)]
    FOR         [使用规则 10 以归约 (statement)]
    RETURN      [使用规则 10 以归约 (statement)]
    CONTINUE    [使用规则 10 以归约 (statement)]
    BREAK       [使用规则 10 以归约 (statement)]
    SCANF       [使用规则 10 以归约 (statement)]
    PRINTF      [使用规则 10 以归约 (statement)]
    IDENTIFIER  [使用规则 10 以归约 (statement)]
    $default    使用规则 10 以归约 (statement)

    statement    转到状态 53
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 122

    5 statements: statements . statement
   11 statement: WHILE LBRACKET bool_expr RBRACKET statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    IDENTIFIER  偏移，并进入状态 15

    T_CHAR      [使用规则 11 以归约 (statement)]
    T_INT       [使用规则 11 以归约 (statement)]
    T_BOOL      [使用规则 11 以归约 (statement)]
    SEMICOLON   [使用规则 11 以归约 (statement)]
    IF          [使用规则 11 以归约 (statement)]
    WHILE       [使用规则 11 以归约 (statement)]
    FOR         [使用规则 11 以归约 (statement)]
    RETURN      [使用规则 11 以归约 (statement)]
    CONTINUE    [使用规则 11 以归约 (statement)]
    BREAK       [使用规则 11 以归约 (statement)]
    SCANF       [使用规则 11 以归约 (statement)]
    PRINTF      [使用规则 11 以归约 (statement)]
    IDENTIFIER  [使用规则 11 以归约 (statement)]
    $default    使用规则 11 以归约 (statement)

    statement    转到状态 53
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 123

   15 statement: FOR LBRACKET declaration SEMICOLON expr . SEMICOLON expr RBRACKET statements

    SEMICOLON  偏移，并进入状态 128


状态 124

   21 IOFUNC: SCANF LBRACKET STRING COMMA ADDR . expr RBRACKET

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 129
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 125

   20 IOFUNC: SCANF LBRACKET STRING COMMA expr . RBRACKET

    RBRACKET  偏移，并进入状态 130


状态 126

   18 IOFUNC: PRINTF LBRACKET STRING COMMA expr . RBRACKET

    RBRACKET  偏移，并进入状态 131


状态 127

    9 statement: IF LBRACKET bool_expr RBRACKET statements ELSE . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LBRACE      偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 15

    statements   转到状态 132
    statement    转到状态 18
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 128

   15 statement: FOR LBRACKET declaration SEMICOLON expr SEMICOLON . expr RBRACKET statements

    LBRACKET    偏移，并进入状态 26
    IDENTIFIER  偏移，并进入状态 27
    INTEGER     偏移，并进入状态 28
    CHAR        偏移，并进入状态 29
    TRUE        偏移，并进入状态 30
    FALSE       偏移，并进入状态 31
    SUB         偏移，并进入状态 32
    NOT         偏移，并进入状态 33
    INC         偏移，并进入状态 34
    DEC         偏移，并进入状态 35
    MINUS       偏移，并进入状态 36

    expr         转到状态 133
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 129

   21 IOFUNC: SCANF LBRACKET STRING COMMA ADDR expr . RBRACKET

    RBRACKET  偏移，并进入状态 134


状态 130

   20 IOFUNC: SCANF LBRACKET STRING COMMA expr RBRACKET .

    $default  使用规则 20 以归约 (IOFUNC)


状态 131

   18 IOFUNC: PRINTF LBRACKET STRING COMMA expr RBRACKET .

    $default  使用规则 18 以归约 (IOFUNC)


状态 132

    5 statements: statements . statement
    9 statement: IF LBRACKET bool_expr RBRACKET statements ELSE statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    IDENTIFIER  偏移，并进入状态 15

    T_CHAR      [使用规则 9 以归约 (statement)]
    T_INT       [使用规则 9 以归约 (statement)]
    T_BOOL      [使用规则 9 以归约 (statement)]
    SEMICOLON   [使用规则 9 以归约 (statement)]
    IF          [使用规则 9 以归约 (statement)]
    WHILE       [使用规则 9 以归约 (statement)]
    FOR         [使用规则 9 以归约 (statement)]
    RETURN      [使用规则 9 以归约 (statement)]
    CONTINUE    [使用规则 9 以归约 (statement)]
    BREAK       [使用规则 9 以归约 (statement)]
    SCANF       [使用规则 9 以归约 (statement)]
    PRINTF      [使用规则 9 以归约 (statement)]
    IDENTIFIER  [使用规则 9 以归约 (statement)]
    $default    使用规则 9 以归约 (statement)

    statement    转到状态 53
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 133

   15 statement: FOR LBRACKET declaration SEMICOLON expr SEMICOLON expr . RBRACKET statements

    RBRACKET  偏移，并进入状态 135


状态 134

   21 IOFUNC: SCANF LBRACKET STRING COMMA ADDR expr RBRACKET .

    $default  使用规则 21 以归约 (IOFUNC)


状态 135

   15 statement: FOR LBRACKET declaration SEMICOLON expr SEMICOLON expr RBRACKET . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LBRACE      偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 15

    statements   转到状态 136
    statement    转到状态 18
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22


状态 136

    5 statements: statements . statement
   15 statement: FOR LBRACKET declaration SEMICOLON expr SEMICOLON expr RBRACKET statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    IDENTIFIER  偏移，并进入状态 15

    T_CHAR      [使用规则 15 以归约 (statement)]
    T_INT       [使用规则 15 以归约 (statement)]
    T_BOOL      [使用规则 15 以归约 (statement)]
    SEMICOLON   [使用规则 15 以归约 (statement)]
    IF          [使用规则 15 以归约 (statement)]
    WHILE       [使用规则 15 以归约 (statement)]
    FOR         [使用规则 15 以归约 (statement)]
    RETURN      [使用规则 15 以归约 (statement)]
    CONTINUE    [使用规则 15 以归约 (statement)]
    BREAK       [使用规则 15 以归约 (statement)]
    SCANF       [使用规则 15 以归约 (statement)]
    PRINTF      [使用规则 15 以归约 (statement)]
    IDENTIFIER  [使用规则 15 以归约 (statement)]
    $default    使用规则 15 以归约 (statement)

    statement    转到状态 53
    IOFUNC       转到状态 19
    assign       转到状态 20
    declaration  转到状态 21
    T            转到状态 22
