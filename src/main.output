终端机在文法中未使用

    BOOL


状态 8 冲突：10 项偏移/归约
状态 16 冲突：2 项偏移/归约
状态 38 冲突：1 项偏移/归约
状态 47 冲突：2 项偏移/归约
状态 51 冲突：23 项偏移/归约
状态 53 冲突：1 项偏移/归约
状态 54 冲突：1 项偏移/归约
状态 55 冲突：1 项偏移/归约
状态 56 冲突：1 项偏移/归约
状态 57 冲突：1 项偏移/归约
状态 144 冲突：24 项偏移/归约
状态 145 冲突：23 项偏移/归约
状态 156 冲突：23 项偏移/归约
状态 167 冲突：23 项偏移/归约
状态 168 冲突：23 项偏移/归约
状态 169 冲突：23 项偏移/归约
状态 171 冲突：23 项偏移/归约
状态 177 冲突：23 项偏移/归约
状态 178 冲突：23 项偏移/归约
状态 179 冲突：23 项偏移/归约
状态 181 冲突：23 项偏移/归约


语法

    0 $accept: program $end

    1 program: statements

    2 statements: MAIN statements
    3           | statements statement
    4           | statement

    5 statement: block
    6          | decl_stmt
    7          | assign_stmt
    8          | if_stmt
    9          | for_stmt
   10          | while_stmt
   11          | jump_stmt
   12          | io_stmt
   13          | semi_stmt
   14          | expr

   15 semi_stmt: SEMICOLON

   16 block: LB statements RB

   17 decl_stmt: decl_stmt COMMA assign_stmt
   18          | decl_stmt COMMA IDENTIFIER
   19          | T IDENTIFIER
   20          | T assign_stmt

   21 assign_stmt: IDENTIFIER ASSIGN expr
   22            | IDENTIFIER ADDASSIGN expr
   23            | IDENTIFIER SUBASSIGN expr
   24            | IDENTIFIER MULASSIGN expr
   25            | IDENTIFIER DIVASSIGN expr

   26 if_stmt: IF LP bool_expr RP statements ELSE statements
   27        | IF LP bool_expr RP statements

   28 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   30         | FOR LP decl_stmt SEMICOLON SEMICOLON expr RP statements
   31         | FOR LP decl_stmt SEMICOLON expr SEMICOLON RP statements
   32         | FOR LP decl_stmt SEMICOLON SEMICOLON RP statements
   33         | FOR LP SEMICOLON expr SEMICOLON RP statements
   34         | FOR LP SEMICOLON SEMICOLON expr RP statements
   35         | FOR LP SEMICOLON SEMICOLON RP statements

   36 while_stmt: WHILE LP bool_expr RP statements

   37 jump_stmt: BREAK
   38          | CONTINUE
   39          | RETURN
   40          | RETURN expr

   41 io_stmt: PRINTF LP expr RP
   42        | PRINTF LP STRING COMMA expr RP
   43        | PRINTF LP STRING COMMA ADDR expr RP
   44        | SCANF LP expr RP
   45        | SCANF LP STRING COMMA expr RP
   46        | SCANF LP STRING COMMA ADDR expr RP

   47 expr: LP expr RP
   48     | addsub_expr
   49     | bool_expr

   50 addsub_expr: LP addsub_expr RP
   51            | mdm_expr
   52            | addsub_expr ADD addsub_expr
   53            | addsub_expr SUB addsub_expr

   54 mdm_expr: LP mdm_expr RP
   55         | unary_expr
   56         | mdm_expr MUL mdm_expr
   57         | mdm_expr DIV mdm_expr
   58         | mdm_expr MOD mdm_expr

   59 unary_expr: LP unary_expr RP
   60           | SUB unary_expr
   61           | IDENTIFIER
   62           | NOT IDENTIFIER
   63           | INTEGER
   64           | CHAR
   65           | INC IDENTIFIER
   66           | IDENTIFIER INC
   67           | DEC IDENTIFIER
   68           | IDENTIFIER DEC

   69 bool_expr: LP bool_expr RP
   70          | logic_expr
   71          | bool_expr AND logic_expr
   72          | bool_expr OR logic_expr

   73 logic_expr: LP logic_expr RP
   74           | TRUE
   75           | FALSE
   76           | addsub_expr LT addsub_expr
   77           | addsub_expr GT addsub_expr
   78           | addsub_expr LE addsub_expr
   79           | addsub_expr GE addsub_expr
   80           | addsub_expr EQ addsub_expr
   81           | addsub_expr NEQ addsub_expr

   82 T: T_INT
   83  | T_CHAR
   84  | T_BOOL


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    T_CHAR (258) 83
    T_INT (259) 82
    T_BOOL (260) 84
    ADDR (261) 43 46
    SEMICOLON (262) 15 28 29 30 31 32 33 34 35
    COMMA (263) 17 18 42 43 45 46
    IF (264) 26 27
    ELSE (265) 26
    WHILE (266) 36
    FOR (267) 28 29 30 31 32 33 34 35
    RETURN (268) 39 40
    CONTINUE (269) 38
    BREAK (270) 37
    SCANF (271) 44 45 46
    PRINTF (272) 41 42 43
    MAIN (273) 2
    LP (274) 26 27 28 29 30 31 32 33 34 35 36 41 42 43 44 45 46 47 50 54 59 69 73
    RP (275) 26 27 28 29 30 31 32 33 34 35 36 41 42 43 44 45 46 47 50 54 59 69 73
    LB (276) 16
    RB (277) 16
    IDENTIFIER (278) 18 19 21 22 23 24 25 61 62 65 66 67 68
    INTEGER (279) 63
    CHAR (280) 64
    BOOL (281)
    STRING (282) 42 43 45 46
    TRUE (283) 74
    FALSE (284) 75
    ASSIGN (285) 21
    ADDASSIGN (286) 22
    SUBASSIGN (287) 23
    MULASSIGN (288) 24
    DIVASSIGN (289) 25
    AND (290) 71
    OR (291) 72
    LT (292) 76
    GT (293) 77
    LE (294) 78
    GE (295) 79
    EQ (296) 80
    NEQ (297) 81
    ADD (298) 52
    SUB (299) 53 60
    MUL (300) 56
    DIV (301) 57
    MOD (302) 58
    NOT (303) 62
    INC (304) 65 66
    DEC (305) 67 68
    MINUS (306)


非终结语词，附有它们出现处的规则

    $accept (52)
        on left: 0
    program (53)
        on left: 1
        on right: 0
    statements (54)
        on left: 2 3 4
        on right: 1 2 3 16 26 27 28 29 30 31 32 33 34 35 36
    statement (55)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 3 4
    semi_stmt (56)
        on left: 15
        on right: 13
    block (57)
        on left: 16
        on right: 5
    decl_stmt (58)
        on left: 17 18 19 20
        on right: 6 17 18 28 30 31 32
    assign_stmt (59)
        on left: 21 22 23 24 25
        on right: 7 17 20
    if_stmt (60)
        on left: 26 27
        on right: 8
    for_stmt (61)
        on left: 28 29 30 31 32 33 34 35
        on right: 9
    while_stmt (62)
        on left: 36
        on right: 10
    jump_stmt (63)
        on left: 37 38 39 40
        on right: 11
    io_stmt (64)
        on left: 41 42 43 44 45 46
        on right: 12
    expr (65)
        on left: 47 48 49
        on right: 14 21 22 23 24 25 28 29 30 31 33 34 40 41 42 43 44 45 46 47
    addsub_expr (66)
        on left: 50 51 52 53
        on right: 48 50 52 53 76 77 78 79 80 81
    mdm_expr (67)
        on left: 54 55 56 57 58
        on right: 51 54 56 57 58
    unary_expr (68)
        on left: 59 60 61 62 63 64 65 66 67 68
        on right: 55 59 60
    bool_expr (69)
        on left: 69 70 71 72
        on right: 26 27 36 49 69 71 72
    logic_expr (70)
        on left: 73 74 75 76 77 78 79 80 81
        on right: 70 71 72 73
    T (71)
        on left: 82 83 84
        on right: 19 20


状态 0

    0 $accept: . program $end

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    program      转到状态 25
    statements   转到状态 26
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 1

   83 T: T_CHAR .

    $default  使用规则 83 以归约 (T)


状态 2

   82 T: T_INT .

    $default  使用规则 82 以归约 (T)


状态 3

   84 T: T_BOOL .

    $default  使用规则 84 以归约 (T)


状态 4

   15 semi_stmt: SEMICOLON .

    $default  使用规则 15 以归约 (semi_stmt)


状态 5

   26 if_stmt: IF . LP bool_expr RP statements ELSE statements
   27        | IF . LP bool_expr RP statements

    LP  偏移，并进入状态 44


状态 6

   36 while_stmt: WHILE . LP bool_expr RP statements

    LP  偏移，并进入状态 45


状态 7

   28 for_stmt: FOR . LP decl_stmt SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   30         | FOR . LP decl_stmt SEMICOLON SEMICOLON expr RP statements
   31         | FOR . LP decl_stmt SEMICOLON expr SEMICOLON RP statements
   32         | FOR . LP decl_stmt SEMICOLON SEMICOLON RP statements
   33         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   34         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   35         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  偏移，并进入状态 46


状态 8

   39 jump_stmt: RETURN .
   40          | RETURN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    LP          [使用规则 39 以归约 (jump_stmt)]
    IDENTIFIER  [使用规则 39 以归约 (jump_stmt)]
    INTEGER     [使用规则 39 以归约 (jump_stmt)]
    CHAR        [使用规则 39 以归约 (jump_stmt)]
    TRUE        [使用规则 39 以归约 (jump_stmt)]
    FALSE       [使用规则 39 以归约 (jump_stmt)]
    SUB         [使用规则 39 以归约 (jump_stmt)]
    NOT         [使用规则 39 以归约 (jump_stmt)]
    INC         [使用规则 39 以归约 (jump_stmt)]
    DEC         [使用规则 39 以归约 (jump_stmt)]
    $default    使用规则 39 以归约 (jump_stmt)

    expr         转到状态 48
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 9

   38 jump_stmt: CONTINUE .

    $default  使用规则 38 以归约 (jump_stmt)


状态 10

   37 jump_stmt: BREAK .

    $default  使用规则 37 以归约 (jump_stmt)


状态 11

   44 io_stmt: SCANF . LP expr RP
   45        | SCANF . LP STRING COMMA expr RP
   46        | SCANF . LP STRING COMMA ADDR expr RP

    LP  偏移，并进入状态 49


状态 12

   41 io_stmt: PRINTF . LP expr RP
   42        | PRINTF . LP STRING COMMA expr RP
   43        | PRINTF . LP STRING COMMA ADDR expr RP

    LP  偏移，并进入状态 50


状态 13

    2 statements: MAIN . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 51
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 14

   47 expr: LP . expr RP
   50 addsub_expr: LP . addsub_expr RP
   54 mdm_expr: LP . mdm_expr RP
   59 unary_expr: LP . unary_expr RP
   69 bool_expr: LP . bool_expr RP
   73 logic_expr: LP . logic_expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 52
    addsub_expr  转到状态 53
    mdm_expr     转到状态 54
    unary_expr   转到状态 55
    bool_expr    转到状态 56
    logic_expr   转到状态 57


状态 15

   16 block: LB . statements RB

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 58
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 16

   21 assign_stmt: IDENTIFIER . ASSIGN expr
   22            | IDENTIFIER . ADDASSIGN expr
   23            | IDENTIFIER . SUBASSIGN expr
   24            | IDENTIFIER . MULASSIGN expr
   25            | IDENTIFIER . DIVASSIGN expr
   61 unary_expr: IDENTIFIER .
   66           | IDENTIFIER . INC
   68           | IDENTIFIER . DEC

    ASSIGN     偏移，并进入状态 59
    ADDASSIGN  偏移，并进入状态 60
    SUBASSIGN  偏移，并进入状态 61
    MULASSIGN  偏移，并进入状态 62
    DIVASSIGN  偏移，并进入状态 63
    INC        偏移，并进入状态 64
    DEC        偏移，并进入状态 65

    INC       [使用规则 61 以归约 (unary_expr)]
    DEC       [使用规则 61 以归约 (unary_expr)]
    $default  使用规则 61 以归约 (unary_expr)


状态 17

   63 unary_expr: INTEGER .

    $default  使用规则 63 以归约 (unary_expr)


状态 18

   64 unary_expr: CHAR .

    $default  使用规则 64 以归约 (unary_expr)


状态 19

   74 logic_expr: TRUE .

    $default  使用规则 74 以归约 (logic_expr)


状态 20

   75 logic_expr: FALSE .

    $default  使用规则 75 以归约 (logic_expr)


状态 21

   60 unary_expr: SUB . unary_expr

    LP          偏移，并进入状态 66
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    unary_expr  转到状态 67


状态 22

   62 unary_expr: NOT . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 68


状态 23

   65 unary_expr: INC . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 69


状态 24

   67 unary_expr: DEC . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 70


状态 25

    0 $accept: program . $end

    $end  偏移，并进入状态 71


状态 26

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    $default  使用规则 1 以归约 (program)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 27

    4 statements: statement .

    $default  使用规则 4 以归约 (statements)


状态 28

   13 statement: semi_stmt .

    $default  使用规则 13 以归约 (statement)


状态 29

    5 statement: block .

    $default  使用规则 5 以归约 (statement)


状态 30

    6 statement: decl_stmt .
   17 decl_stmt: decl_stmt . COMMA assign_stmt
   18          | decl_stmt . COMMA IDENTIFIER

    COMMA  偏移，并进入状态 73

    $default  使用规则 6 以归约 (statement)


状态 31

    7 statement: assign_stmt .

    $default  使用规则 7 以归约 (statement)


状态 32

    8 statement: if_stmt .

    $default  使用规则 8 以归约 (statement)


状态 33

    9 statement: for_stmt .

    $default  使用规则 9 以归约 (statement)


状态 34

   10 statement: while_stmt .

    $default  使用规则 10 以归约 (statement)


状态 35

   11 statement: jump_stmt .

    $default  使用规则 11 以归约 (statement)


状态 36

   12 statement: io_stmt .

    $default  使用规则 12 以归约 (statement)


状态 37

   14 statement: expr .

    $default  使用规则 14 以归约 (statement)


状态 38

   48 expr: addsub_expr .
   52 addsub_expr: addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   76 logic_expr: addsub_expr . LT addsub_expr
   77           | addsub_expr . GT addsub_expr
   78           | addsub_expr . LE addsub_expr
   79           | addsub_expr . GE addsub_expr
   80           | addsub_expr . EQ addsub_expr
   81           | addsub_expr . NEQ addsub_expr

    LT   偏移，并进入状态 74
    GT   偏移，并进入状态 75
    LE   偏移，并进入状态 76
    GE   偏移，并进入状态 77
    EQ   偏移，并进入状态 78
    NEQ  偏移，并进入状态 79
    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81

    SUB       [使用规则 48 以归约 (expr)]
    $default  使用规则 48 以归约 (expr)


状态 39

   51 addsub_expr: mdm_expr .
   56 mdm_expr: mdm_expr . MUL mdm_expr
   57         | mdm_expr . DIV mdm_expr
   58         | mdm_expr . MOD mdm_expr

    MUL  偏移，并进入状态 82
    DIV  偏移，并进入状态 83
    MOD  偏移，并进入状态 84

    $default  使用规则 51 以归约 (addsub_expr)


状态 40

   55 mdm_expr: unary_expr .

    $default  使用规则 55 以归约 (mdm_expr)


状态 41

   49 expr: bool_expr .
   71 bool_expr: bool_expr . AND logic_expr
   72          | bool_expr . OR logic_expr

    AND  偏移，并进入状态 85
    OR   偏移，并进入状态 86

    $default  使用规则 49 以归约 (expr)


状态 42

   70 bool_expr: logic_expr .

    $default  使用规则 70 以归约 (bool_expr)


状态 43

   19 decl_stmt: T . IDENTIFIER
   20          | T . assign_stmt

    IDENTIFIER  偏移，并进入状态 87

    assign_stmt  转到状态 88


状态 44

   26 if_stmt: IF LP . bool_expr RP statements ELSE statements
   27        | IF LP . bool_expr RP statements

    LP          偏移，并进入状态 89
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 90
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 91
    logic_expr   转到状态 42


状态 45

   36 while_stmt: WHILE LP . bool_expr RP statements

    LP          偏移，并进入状态 89
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 90
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 92
    logic_expr   转到状态 42


状态 46

   28 for_stmt: FOR LP . decl_stmt SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   30         | FOR LP . decl_stmt SEMICOLON SEMICOLON expr RP statements
   31         | FOR LP . decl_stmt SEMICOLON expr SEMICOLON RP statements
   32         | FOR LP . decl_stmt SEMICOLON SEMICOLON RP statements
   33         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   34         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   35         | FOR LP . SEMICOLON SEMICOLON RP statements

    T_CHAR     偏移，并进入状态 1
    T_INT      偏移，并进入状态 2
    T_BOOL     偏移，并进入状态 3
    SEMICOLON  偏移，并进入状态 93

    decl_stmt  转到状态 94
    T          转到状态 43


状态 47

   61 unary_expr: IDENTIFIER .
   66           | IDENTIFIER . INC
   68           | IDENTIFIER . DEC

    INC  偏移，并进入状态 64
    DEC  偏移，并进入状态 65

    INC       [使用规则 61 以归约 (unary_expr)]
    DEC       [使用规则 61 以归约 (unary_expr)]
    $default  使用规则 61 以归约 (unary_expr)


状态 48

   40 jump_stmt: RETURN expr .

    $default  使用规则 40 以归约 (jump_stmt)


状态 49

   44 io_stmt: SCANF LP . expr RP
   45        | SCANF LP . STRING COMMA expr RP
   46        | SCANF LP . STRING COMMA ADDR expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    STRING      偏移，并进入状态 95
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 96
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 50

   41 io_stmt: PRINTF LP . expr RP
   42        | PRINTF LP . STRING COMMA expr RP
   43        | PRINTF LP . STRING COMMA ADDR expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    STRING      偏移，并进入状态 97
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 98
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 51

    2 statements: MAIN statements .
    3           | statements . statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 2 以归约 (statements)]
    T_INT       [使用规则 2 以归约 (statements)]
    T_BOOL      [使用规则 2 以归约 (statements)]
    SEMICOLON   [使用规则 2 以归约 (statements)]
    IF          [使用规则 2 以归约 (statements)]
    WHILE       [使用规则 2 以归约 (statements)]
    FOR         [使用规则 2 以归约 (statements)]
    RETURN      [使用规则 2 以归约 (statements)]
    CONTINUE    [使用规则 2 以归约 (statements)]
    BREAK       [使用规则 2 以归约 (statements)]
    SCANF       [使用规则 2 以归约 (statements)]
    PRINTF      [使用规则 2 以归约 (statements)]
    LP          [使用规则 2 以归约 (statements)]
    LB          [使用规则 2 以归约 (statements)]
    IDENTIFIER  [使用规则 2 以归约 (statements)]
    INTEGER     [使用规则 2 以归约 (statements)]
    CHAR        [使用规则 2 以归约 (statements)]
    TRUE        [使用规则 2 以归约 (statements)]
    FALSE       [使用规则 2 以归约 (statements)]
    SUB         [使用规则 2 以归约 (statements)]
    NOT         [使用规则 2 以归约 (statements)]
    INC         [使用规则 2 以归约 (statements)]
    DEC         [使用规则 2 以归约 (statements)]
    $default    使用规则 2 以归约 (statements)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 52

   47 expr: LP expr . RP

    RP  偏移，并进入状态 99


状态 53

   48 expr: addsub_expr .
   50 addsub_expr: LP addsub_expr . RP
   52            | addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   76 logic_expr: addsub_expr . LT addsub_expr
   77           | addsub_expr . GT addsub_expr
   78           | addsub_expr . LE addsub_expr
   79           | addsub_expr . GE addsub_expr
   80           | addsub_expr . EQ addsub_expr
   81           | addsub_expr . NEQ addsub_expr

    RP   偏移，并进入状态 100
    LT   偏移，并进入状态 74
    GT   偏移，并进入状态 75
    LE   偏移，并进入状态 76
    GE   偏移，并进入状态 77
    EQ   偏移，并进入状态 78
    NEQ  偏移，并进入状态 79
    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81

    RP  [使用规则 48 以归约 (expr)]


状态 54

   51 addsub_expr: mdm_expr .
   54 mdm_expr: LP mdm_expr . RP
   56         | mdm_expr . MUL mdm_expr
   57         | mdm_expr . DIV mdm_expr
   58         | mdm_expr . MOD mdm_expr

    RP   偏移，并进入状态 101
    MUL  偏移，并进入状态 82
    DIV  偏移，并进入状态 83
    MOD  偏移，并进入状态 84

    RP        [使用规则 51 以归约 (addsub_expr)]
    $default  使用规则 51 以归约 (addsub_expr)


状态 55

   55 mdm_expr: unary_expr .
   59 unary_expr: LP unary_expr . RP

    RP  偏移，并进入状态 102

    RP        [使用规则 55 以归约 (mdm_expr)]
    $default  使用规则 55 以归约 (mdm_expr)


状态 56

   49 expr: bool_expr .
   69 bool_expr: LP bool_expr . RP
   71          | bool_expr . AND logic_expr
   72          | bool_expr . OR logic_expr

    RP   偏移，并进入状态 103
    AND  偏移，并进入状态 85
    OR   偏移，并进入状态 86

    RP  [使用规则 49 以归约 (expr)]


状态 57

   70 bool_expr: logic_expr .
   73 logic_expr: LP logic_expr . RP

    RP  偏移，并进入状态 104

    RP        [使用规则 70 以归约 (bool_expr)]
    $default  使用规则 70 以归约 (bool_expr)


状态 58

    3 statements: statements . statement
   16 block: LB statements . RB

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    RB          偏移，并进入状态 105
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 59

   21 assign_stmt: IDENTIFIER ASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 106
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 60

   22 assign_stmt: IDENTIFIER ADDASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 107
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 61

   23 assign_stmt: IDENTIFIER SUBASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 108
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 62

   24 assign_stmt: IDENTIFIER MULASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 109
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 63

   25 assign_stmt: IDENTIFIER DIVASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 110
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 64

   66 unary_expr: IDENTIFIER INC .

    $default  使用规则 66 以归约 (unary_expr)


状态 65

   68 unary_expr: IDENTIFIER DEC .

    $default  使用规则 68 以归约 (unary_expr)


状态 66

   59 unary_expr: LP . unary_expr RP

    LP          偏移，并进入状态 66
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    unary_expr  转到状态 111


状态 67

   60 unary_expr: SUB unary_expr .

    $default  使用规则 60 以归约 (unary_expr)


状态 68

   62 unary_expr: NOT IDENTIFIER .

    $default  使用规则 62 以归约 (unary_expr)


状态 69

   65 unary_expr: INC IDENTIFIER .

    $default  使用规则 65 以归约 (unary_expr)


状态 70

   67 unary_expr: DEC IDENTIFIER .

    $default  使用规则 67 以归约 (unary_expr)


状态 71

    0 $accept: program $end .

    $default  接受


状态 72

    3 statements: statements statement .

    $default  使用规则 3 以归约 (statements)


状态 73

   17 decl_stmt: decl_stmt COMMA . assign_stmt
   18          | decl_stmt COMMA . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 112

    assign_stmt  转到状态 113


状态 74

   76 logic_expr: addsub_expr LT . addsub_expr

    LP          偏移，并进入状态 114
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 115
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 75

   77 logic_expr: addsub_expr GT . addsub_expr

    LP          偏移，并进入状态 114
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 116
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 76

   78 logic_expr: addsub_expr LE . addsub_expr

    LP          偏移，并进入状态 114
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 117
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 77

   79 logic_expr: addsub_expr GE . addsub_expr

    LP          偏移，并进入状态 114
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 118
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 78

   80 logic_expr: addsub_expr EQ . addsub_expr

    LP          偏移，并进入状态 114
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 119
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 79

   81 logic_expr: addsub_expr NEQ . addsub_expr

    LP          偏移，并进入状态 114
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 120
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 80

   52 addsub_expr: addsub_expr ADD . addsub_expr

    LP          偏移，并进入状态 114
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 121
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 81

   53 addsub_expr: addsub_expr SUB . addsub_expr

    LP          偏移，并进入状态 114
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 122
    mdm_expr     转到状态 39
    unary_expr   转到状态 40


状态 82

   56 mdm_expr: mdm_expr MUL . mdm_expr

    LP          偏移，并进入状态 123
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    mdm_expr    转到状态 124
    unary_expr  转到状态 40


状态 83

   57 mdm_expr: mdm_expr DIV . mdm_expr

    LP          偏移，并进入状态 123
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    mdm_expr    转到状态 125
    unary_expr  转到状态 40


状态 84

   58 mdm_expr: mdm_expr MOD . mdm_expr

    LP          偏移，并进入状态 123
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    mdm_expr    转到状态 126
    unary_expr  转到状态 40


状态 85

   71 bool_expr: bool_expr AND . logic_expr

    LP          偏移，并进入状态 127
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 90
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    logic_expr   转到状态 128


状态 86

   72 bool_expr: bool_expr OR . logic_expr

    LP          偏移，并进入状态 127
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 90
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    logic_expr   转到状态 129


状态 87

   19 decl_stmt: T IDENTIFIER .
   21 assign_stmt: IDENTIFIER . ASSIGN expr
   22            | IDENTIFIER . ADDASSIGN expr
   23            | IDENTIFIER . SUBASSIGN expr
   24            | IDENTIFIER . MULASSIGN expr
   25            | IDENTIFIER . DIVASSIGN expr

    ASSIGN     偏移，并进入状态 59
    ADDASSIGN  偏移，并进入状态 60
    SUBASSIGN  偏移，并进入状态 61
    MULASSIGN  偏移，并进入状态 62
    DIVASSIGN  偏移，并进入状态 63

    $default  使用规则 19 以归约 (decl_stmt)


状态 88

   20 decl_stmt: T assign_stmt .

    $default  使用规则 20 以归约 (decl_stmt)


状态 89

   50 addsub_expr: LP . addsub_expr RP
   54 mdm_expr: LP . mdm_expr RP
   59 unary_expr: LP . unary_expr RP
   69 bool_expr: LP . bool_expr RP
   73 logic_expr: LP . logic_expr RP

    LP          偏移，并进入状态 89
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 130
    mdm_expr     转到状态 54
    unary_expr   转到状态 55
    bool_expr    转到状态 131
    logic_expr   转到状态 57


状态 90

   52 addsub_expr: addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   76 logic_expr: addsub_expr . LT addsub_expr
   77           | addsub_expr . GT addsub_expr
   78           | addsub_expr . LE addsub_expr
   79           | addsub_expr . GE addsub_expr
   80           | addsub_expr . EQ addsub_expr
   81           | addsub_expr . NEQ addsub_expr

    LT   偏移，并进入状态 74
    GT   偏移，并进入状态 75
    LE   偏移，并进入状态 76
    GE   偏移，并进入状态 77
    EQ   偏移，并进入状态 78
    NEQ  偏移，并进入状态 79
    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81


状态 91

   26 if_stmt: IF LP bool_expr . RP statements ELSE statements
   27        | IF LP bool_expr . RP statements
   71 bool_expr: bool_expr . AND logic_expr
   72          | bool_expr . OR logic_expr

    RP   偏移，并进入状态 132
    AND  偏移，并进入状态 85
    OR   偏移，并进入状态 86


状态 92

   36 while_stmt: WHILE LP bool_expr . RP statements
   71 bool_expr: bool_expr . AND logic_expr
   72          | bool_expr . OR logic_expr

    RP   偏移，并进入状态 133
    AND  偏移，并进入状态 85
    OR   偏移，并进入状态 86


状态 93

   29 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   33         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   34         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   35         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON   偏移，并进入状态 134
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 135
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 94

   17 decl_stmt: decl_stmt . COMMA assign_stmt
   18          | decl_stmt . COMMA IDENTIFIER
   28 for_stmt: FOR LP decl_stmt . SEMICOLON expr SEMICOLON expr RP statements
   30         | FOR LP decl_stmt . SEMICOLON SEMICOLON expr RP statements
   31         | FOR LP decl_stmt . SEMICOLON expr SEMICOLON RP statements
   32         | FOR LP decl_stmt . SEMICOLON SEMICOLON RP statements

    SEMICOLON  偏移，并进入状态 136
    COMMA      偏移，并进入状态 73


状态 95

   45 io_stmt: SCANF LP STRING . COMMA expr RP
   46        | SCANF LP STRING . COMMA ADDR expr RP

    COMMA  偏移，并进入状态 137


状态 96

   44 io_stmt: SCANF LP expr . RP

    RP  偏移，并进入状态 138


状态 97

   42 io_stmt: PRINTF LP STRING . COMMA expr RP
   43        | PRINTF LP STRING . COMMA ADDR expr RP

    COMMA  偏移，并进入状态 139


状态 98

   41 io_stmt: PRINTF LP expr . RP

    RP  偏移，并进入状态 140


状态 99

   47 expr: LP expr RP .

    $default  使用规则 47 以归约 (expr)


状态 100

   50 addsub_expr: LP addsub_expr RP .

    $default  使用规则 50 以归约 (addsub_expr)


状态 101

   54 mdm_expr: LP mdm_expr RP .

    $default  使用规则 54 以归约 (mdm_expr)


状态 102

   59 unary_expr: LP unary_expr RP .

    $default  使用规则 59 以归约 (unary_expr)


状态 103

   69 bool_expr: LP bool_expr RP .

    $default  使用规则 69 以归约 (bool_expr)


状态 104

   73 logic_expr: LP logic_expr RP .

    $default  使用规则 73 以归约 (logic_expr)


状态 105

   16 block: LB statements RB .

    $default  使用规则 16 以归约 (block)


状态 106

   21 assign_stmt: IDENTIFIER ASSIGN expr .

    $default  使用规则 21 以归约 (assign_stmt)


状态 107

   22 assign_stmt: IDENTIFIER ADDASSIGN expr .

    $default  使用规则 22 以归约 (assign_stmt)


状态 108

   23 assign_stmt: IDENTIFIER SUBASSIGN expr .

    $default  使用规则 23 以归约 (assign_stmt)


状态 109

   24 assign_stmt: IDENTIFIER MULASSIGN expr .

    $default  使用规则 24 以归约 (assign_stmt)


状态 110

   25 assign_stmt: IDENTIFIER DIVASSIGN expr .

    $default  使用规则 25 以归约 (assign_stmt)


状态 111

   59 unary_expr: LP unary_expr . RP

    RP  偏移，并进入状态 102


状态 112

   18 decl_stmt: decl_stmt COMMA IDENTIFIER .
   21 assign_stmt: IDENTIFIER . ASSIGN expr
   22            | IDENTIFIER . ADDASSIGN expr
   23            | IDENTIFIER . SUBASSIGN expr
   24            | IDENTIFIER . MULASSIGN expr
   25            | IDENTIFIER . DIVASSIGN expr

    ASSIGN     偏移，并进入状态 59
    ADDASSIGN  偏移，并进入状态 60
    SUBASSIGN  偏移，并进入状态 61
    MULASSIGN  偏移，并进入状态 62
    DIVASSIGN  偏移，并进入状态 63

    $default  使用规则 18 以归约 (decl_stmt)


状态 113

   17 decl_stmt: decl_stmt COMMA assign_stmt .

    $default  使用规则 17 以归约 (decl_stmt)


状态 114

   50 addsub_expr: LP . addsub_expr RP
   54 mdm_expr: LP . mdm_expr RP
   59 unary_expr: LP . unary_expr RP

    LP          偏移，并进入状态 114
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 141
    mdm_expr     转到状态 54
    unary_expr   转到状态 55


状态 115

   52 addsub_expr: addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   76 logic_expr: addsub_expr LT addsub_expr .

    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81

    $default  使用规则 76 以归约 (logic_expr)


状态 116

   52 addsub_expr: addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   77 logic_expr: addsub_expr GT addsub_expr .

    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81

    $default  使用规则 77 以归约 (logic_expr)


状态 117

   52 addsub_expr: addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   78 logic_expr: addsub_expr LE addsub_expr .

    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81

    $default  使用规则 78 以归约 (logic_expr)


状态 118

   52 addsub_expr: addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   79 logic_expr: addsub_expr GE addsub_expr .

    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81

    $default  使用规则 79 以归约 (logic_expr)


状态 119

   52 addsub_expr: addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   80 logic_expr: addsub_expr EQ addsub_expr .

    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81

    $default  使用规则 80 以归约 (logic_expr)


状态 120

   52 addsub_expr: addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   81 logic_expr: addsub_expr NEQ addsub_expr .

    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81

    $default  使用规则 81 以归约 (logic_expr)


状态 121

   52 addsub_expr: addsub_expr . ADD addsub_expr
   52            | addsub_expr ADD addsub_expr .
   53            | addsub_expr . SUB addsub_expr

    $default  使用规则 52 以归约 (addsub_expr)


状态 122

   52 addsub_expr: addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   53            | addsub_expr SUB addsub_expr .

    $default  使用规则 53 以归约 (addsub_expr)


状态 123

   54 mdm_expr: LP . mdm_expr RP
   59 unary_expr: LP . unary_expr RP

    LP          偏移，并进入状态 123
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    mdm_expr    转到状态 142
    unary_expr  转到状态 55


状态 124

   56 mdm_expr: mdm_expr . MUL mdm_expr
   56         | mdm_expr MUL mdm_expr .
   57         | mdm_expr . DIV mdm_expr
   58         | mdm_expr . MOD mdm_expr

    $default  使用规则 56 以归约 (mdm_expr)


状态 125

   56 mdm_expr: mdm_expr . MUL mdm_expr
   57         | mdm_expr . DIV mdm_expr
   57         | mdm_expr DIV mdm_expr .
   58         | mdm_expr . MOD mdm_expr

    $default  使用规则 57 以归约 (mdm_expr)


状态 126

   56 mdm_expr: mdm_expr . MUL mdm_expr
   57         | mdm_expr . DIV mdm_expr
   58         | mdm_expr . MOD mdm_expr
   58         | mdm_expr MOD mdm_expr .

    $default  使用规则 58 以归约 (mdm_expr)


状态 127

   50 addsub_expr: LP . addsub_expr RP
   54 mdm_expr: LP . mdm_expr RP
   59 unary_expr: LP . unary_expr RP
   73 logic_expr: LP . logic_expr RP

    LP          偏移，并进入状态 127
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    addsub_expr  转到状态 130
    mdm_expr     转到状态 54
    unary_expr   转到状态 55
    logic_expr   转到状态 143


状态 128

   71 bool_expr: bool_expr AND logic_expr .

    $default  使用规则 71 以归约 (bool_expr)


状态 129

   72 bool_expr: bool_expr OR logic_expr .

    $default  使用规则 72 以归约 (bool_expr)


状态 130

   50 addsub_expr: LP addsub_expr . RP
   52            | addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr
   76 logic_expr: addsub_expr . LT addsub_expr
   77           | addsub_expr . GT addsub_expr
   78           | addsub_expr . LE addsub_expr
   79           | addsub_expr . GE addsub_expr
   80           | addsub_expr . EQ addsub_expr
   81           | addsub_expr . NEQ addsub_expr

    RP   偏移，并进入状态 100
    LT   偏移，并进入状态 74
    GT   偏移，并进入状态 75
    LE   偏移，并进入状态 76
    GE   偏移，并进入状态 77
    EQ   偏移，并进入状态 78
    NEQ  偏移，并进入状态 79
    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81


状态 131

   69 bool_expr: LP bool_expr . RP
   71          | bool_expr . AND logic_expr
   72          | bool_expr . OR logic_expr

    RP   偏移，并进入状态 103
    AND  偏移，并进入状态 85
    OR   偏移，并进入状态 86


状态 132

   26 if_stmt: IF LP bool_expr RP . statements ELSE statements
   27        | IF LP bool_expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 144
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 133

   36 while_stmt: WHILE LP bool_expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 145
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 134

   34 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   35         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 146
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 147
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 135

   29 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   33         | FOR LP SEMICOLON expr . SEMICOLON RP statements

    SEMICOLON  偏移，并进入状态 148


状态 136

   28 for_stmt: FOR LP decl_stmt SEMICOLON . expr SEMICOLON expr RP statements
   30         | FOR LP decl_stmt SEMICOLON . SEMICOLON expr RP statements
   31         | FOR LP decl_stmt SEMICOLON . expr SEMICOLON RP statements
   32         | FOR LP decl_stmt SEMICOLON . SEMICOLON RP statements

    SEMICOLON   偏移，并进入状态 149
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 150
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 137

   45 io_stmt: SCANF LP STRING COMMA . expr RP
   46        | SCANF LP STRING COMMA . ADDR expr RP

    ADDR        偏移，并进入状态 151
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 152
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 138

   44 io_stmt: SCANF LP expr RP .

    $default  使用规则 44 以归约 (io_stmt)


状态 139

   42 io_stmt: PRINTF LP STRING COMMA . expr RP
   43        | PRINTF LP STRING COMMA . ADDR expr RP

    ADDR        偏移，并进入状态 153
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 154
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 140

   41 io_stmt: PRINTF LP expr RP .

    $default  使用规则 41 以归约 (io_stmt)


状态 141

   50 addsub_expr: LP addsub_expr . RP
   52            | addsub_expr . ADD addsub_expr
   53            | addsub_expr . SUB addsub_expr

    RP   偏移，并进入状态 100
    ADD  偏移，并进入状态 80
    SUB  偏移，并进入状态 81


状态 142

   54 mdm_expr: LP mdm_expr . RP
   56         | mdm_expr . MUL mdm_expr
   57         | mdm_expr . DIV mdm_expr
   58         | mdm_expr . MOD mdm_expr

    RP   偏移，并进入状态 101
    MUL  偏移，并进入状态 82
    DIV  偏移，并进入状态 83
    MOD  偏移，并进入状态 84


状态 143

   73 logic_expr: LP logic_expr . RP

    RP  偏移，并进入状态 104


状态 144

    3 statements: statements . statement
   26 if_stmt: IF LP bool_expr RP statements . ELSE statements
   27        | IF LP bool_expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    ELSE        偏移，并进入状态 155
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 27 以归约 (if_stmt)]
    T_INT       [使用规则 27 以归约 (if_stmt)]
    T_BOOL      [使用规则 27 以归约 (if_stmt)]
    SEMICOLON   [使用规则 27 以归约 (if_stmt)]
    IF          [使用规则 27 以归约 (if_stmt)]
    ELSE        [使用规则 27 以归约 (if_stmt)]
    WHILE       [使用规则 27 以归约 (if_stmt)]
    FOR         [使用规则 27 以归约 (if_stmt)]
    RETURN      [使用规则 27 以归约 (if_stmt)]
    CONTINUE    [使用规则 27 以归约 (if_stmt)]
    BREAK       [使用规则 27 以归约 (if_stmt)]
    SCANF       [使用规则 27 以归约 (if_stmt)]
    PRINTF      [使用规则 27 以归约 (if_stmt)]
    LP          [使用规则 27 以归约 (if_stmt)]
    LB          [使用规则 27 以归约 (if_stmt)]
    IDENTIFIER  [使用规则 27 以归约 (if_stmt)]
    INTEGER     [使用规则 27 以归约 (if_stmt)]
    CHAR        [使用规则 27 以归约 (if_stmt)]
    TRUE        [使用规则 27 以归约 (if_stmt)]
    FALSE       [使用规则 27 以归约 (if_stmt)]
    SUB         [使用规则 27 以归约 (if_stmt)]
    NOT         [使用规则 27 以归约 (if_stmt)]
    INC         [使用规则 27 以归约 (if_stmt)]
    DEC         [使用规则 27 以归约 (if_stmt)]
    $default    使用规则 27 以归约 (if_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 145

    3 statements: statements . statement
   36 while_stmt: WHILE LP bool_expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 36 以归约 (while_stmt)]
    T_INT       [使用规则 36 以归约 (while_stmt)]
    T_BOOL      [使用规则 36 以归约 (while_stmt)]
    SEMICOLON   [使用规则 36 以归约 (while_stmt)]
    IF          [使用规则 36 以归约 (while_stmt)]
    WHILE       [使用规则 36 以归约 (while_stmt)]
    FOR         [使用规则 36 以归约 (while_stmt)]
    RETURN      [使用规则 36 以归约 (while_stmt)]
    CONTINUE    [使用规则 36 以归约 (while_stmt)]
    BREAK       [使用规则 36 以归约 (while_stmt)]
    SCANF       [使用规则 36 以归约 (while_stmt)]
    PRINTF      [使用规则 36 以归约 (while_stmt)]
    LP          [使用规则 36 以归约 (while_stmt)]
    LB          [使用规则 36 以归约 (while_stmt)]
    IDENTIFIER  [使用规则 36 以归约 (while_stmt)]
    INTEGER     [使用规则 36 以归约 (while_stmt)]
    CHAR        [使用规则 36 以归约 (while_stmt)]
    TRUE        [使用规则 36 以归约 (while_stmt)]
    FALSE       [使用规则 36 以归约 (while_stmt)]
    SUB         [使用规则 36 以归约 (while_stmt)]
    NOT         [使用规则 36 以归约 (while_stmt)]
    INC         [使用规则 36 以归约 (while_stmt)]
    DEC         [使用规则 36 以归约 (while_stmt)]
    $default    使用规则 36 以归约 (while_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 146

   35 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 156
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 147

   34 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements

    RP  偏移，并进入状态 157


状态 148

   29 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   33         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 158
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 159
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 149

   30 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON . expr RP statements
   32         | FOR LP decl_stmt SEMICOLON SEMICOLON . RP statements

    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 160
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 161
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 150

   28 for_stmt: FOR LP decl_stmt SEMICOLON expr . SEMICOLON expr RP statements
   31         | FOR LP decl_stmt SEMICOLON expr . SEMICOLON RP statements

    SEMICOLON  偏移，并进入状态 162


状态 151

   46 io_stmt: SCANF LP STRING COMMA ADDR . expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 163
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 152

   45 io_stmt: SCANF LP STRING COMMA expr . RP

    RP  偏移，并进入状态 164


状态 153

   43 io_stmt: PRINTF LP STRING COMMA ADDR . expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 165
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 154

   42 io_stmt: PRINTF LP STRING COMMA expr . RP

    RP  偏移，并进入状态 166


状态 155

   26 if_stmt: IF LP bool_expr RP statements ELSE . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 167
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 156

    3 statements: statements . statement
   35 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 35 以归约 (for_stmt)]
    T_INT       [使用规则 35 以归约 (for_stmt)]
    T_BOOL      [使用规则 35 以归约 (for_stmt)]
    SEMICOLON   [使用规则 35 以归约 (for_stmt)]
    IF          [使用规则 35 以归约 (for_stmt)]
    WHILE       [使用规则 35 以归约 (for_stmt)]
    FOR         [使用规则 35 以归约 (for_stmt)]
    RETURN      [使用规则 35 以归约 (for_stmt)]
    CONTINUE    [使用规则 35 以归约 (for_stmt)]
    BREAK       [使用规则 35 以归约 (for_stmt)]
    SCANF       [使用规则 35 以归约 (for_stmt)]
    PRINTF      [使用规则 35 以归约 (for_stmt)]
    LP          [使用规则 35 以归约 (for_stmt)]
    LB          [使用规则 35 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 35 以归约 (for_stmt)]
    INTEGER     [使用规则 35 以归约 (for_stmt)]
    CHAR        [使用规则 35 以归约 (for_stmt)]
    TRUE        [使用规则 35 以归约 (for_stmt)]
    FALSE       [使用规则 35 以归约 (for_stmt)]
    SUB         [使用规则 35 以归约 (for_stmt)]
    NOT         [使用规则 35 以归约 (for_stmt)]
    INC         [使用规则 35 以归约 (for_stmt)]
    DEC         [使用规则 35 以归约 (for_stmt)]
    $default    使用规则 35 以归约 (for_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 157

   34 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 168
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 158

   33 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 169
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 159

   29 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements

    RP  偏移，并进入状态 170


状态 160

   32 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 171
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 161

   30 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON expr . RP statements

    RP  偏移，并进入状态 172


状态 162

   28 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON . expr RP statements
   31         | FOR LP decl_stmt SEMICOLON expr SEMICOLON . RP statements

    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 173
    IDENTIFIER  偏移，并进入状态 47
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr         转到状态 174
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42


状态 163

   46 io_stmt: SCANF LP STRING COMMA ADDR expr . RP

    RP  偏移，并进入状态 175


状态 164

   45 io_stmt: SCANF LP STRING COMMA expr RP .

    $default  使用规则 45 以归约 (io_stmt)


状态 165

   43 io_stmt: PRINTF LP STRING COMMA ADDR expr . RP

    RP  偏移，并进入状态 176


状态 166

   42 io_stmt: PRINTF LP STRING COMMA expr RP .

    $default  使用规则 42 以归约 (io_stmt)


状态 167

    3 statements: statements . statement
   26 if_stmt: IF LP bool_expr RP statements ELSE statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 26 以归约 (if_stmt)]
    T_INT       [使用规则 26 以归约 (if_stmt)]
    T_BOOL      [使用规则 26 以归约 (if_stmt)]
    SEMICOLON   [使用规则 26 以归约 (if_stmt)]
    IF          [使用规则 26 以归约 (if_stmt)]
    WHILE       [使用规则 26 以归约 (if_stmt)]
    FOR         [使用规则 26 以归约 (if_stmt)]
    RETURN      [使用规则 26 以归约 (if_stmt)]
    CONTINUE    [使用规则 26 以归约 (if_stmt)]
    BREAK       [使用规则 26 以归约 (if_stmt)]
    SCANF       [使用规则 26 以归约 (if_stmt)]
    PRINTF      [使用规则 26 以归约 (if_stmt)]
    LP          [使用规则 26 以归约 (if_stmt)]
    LB          [使用规则 26 以归约 (if_stmt)]
    IDENTIFIER  [使用规则 26 以归约 (if_stmt)]
    INTEGER     [使用规则 26 以归约 (if_stmt)]
    CHAR        [使用规则 26 以归约 (if_stmt)]
    TRUE        [使用规则 26 以归约 (if_stmt)]
    FALSE       [使用规则 26 以归约 (if_stmt)]
    SUB         [使用规则 26 以归约 (if_stmt)]
    NOT         [使用规则 26 以归约 (if_stmt)]
    INC         [使用规则 26 以归约 (if_stmt)]
    DEC         [使用规则 26 以归约 (if_stmt)]
    $default    使用规则 26 以归约 (if_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 168

    3 statements: statements . statement
   34 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 34 以归约 (for_stmt)]
    T_INT       [使用规则 34 以归约 (for_stmt)]
    T_BOOL      [使用规则 34 以归约 (for_stmt)]
    SEMICOLON   [使用规则 34 以归约 (for_stmt)]
    IF          [使用规则 34 以归约 (for_stmt)]
    WHILE       [使用规则 34 以归约 (for_stmt)]
    FOR         [使用规则 34 以归约 (for_stmt)]
    RETURN      [使用规则 34 以归约 (for_stmt)]
    CONTINUE    [使用规则 34 以归约 (for_stmt)]
    BREAK       [使用规则 34 以归约 (for_stmt)]
    SCANF       [使用规则 34 以归约 (for_stmt)]
    PRINTF      [使用规则 34 以归约 (for_stmt)]
    LP          [使用规则 34 以归约 (for_stmt)]
    LB          [使用规则 34 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 34 以归约 (for_stmt)]
    INTEGER     [使用规则 34 以归约 (for_stmt)]
    CHAR        [使用规则 34 以归约 (for_stmt)]
    TRUE        [使用规则 34 以归约 (for_stmt)]
    FALSE       [使用规则 34 以归约 (for_stmt)]
    SUB         [使用规则 34 以归约 (for_stmt)]
    NOT         [使用规则 34 以归约 (for_stmt)]
    INC         [使用规则 34 以归约 (for_stmt)]
    DEC         [使用规则 34 以归约 (for_stmt)]
    $default    使用规则 34 以归约 (for_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 169

    3 statements: statements . statement
   33 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 33 以归约 (for_stmt)]
    T_INT       [使用规则 33 以归约 (for_stmt)]
    T_BOOL      [使用规则 33 以归约 (for_stmt)]
    SEMICOLON   [使用规则 33 以归约 (for_stmt)]
    IF          [使用规则 33 以归约 (for_stmt)]
    WHILE       [使用规则 33 以归约 (for_stmt)]
    FOR         [使用规则 33 以归约 (for_stmt)]
    RETURN      [使用规则 33 以归约 (for_stmt)]
    CONTINUE    [使用规则 33 以归约 (for_stmt)]
    BREAK       [使用规则 33 以归约 (for_stmt)]
    SCANF       [使用规则 33 以归约 (for_stmt)]
    PRINTF      [使用规则 33 以归约 (for_stmt)]
    LP          [使用规则 33 以归约 (for_stmt)]
    LB          [使用规则 33 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 33 以归约 (for_stmt)]
    INTEGER     [使用规则 33 以归约 (for_stmt)]
    CHAR        [使用规则 33 以归约 (for_stmt)]
    TRUE        [使用规则 33 以归约 (for_stmt)]
    FALSE       [使用规则 33 以归约 (for_stmt)]
    SUB         [使用规则 33 以归约 (for_stmt)]
    NOT         [使用规则 33 以归约 (for_stmt)]
    INC         [使用规则 33 以归约 (for_stmt)]
    DEC         [使用规则 33 以归约 (for_stmt)]
    $default    使用规则 33 以归约 (for_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 170

   29 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 177
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 171

    3 statements: statements . statement
   32 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 32 以归约 (for_stmt)]
    T_INT       [使用规则 32 以归约 (for_stmt)]
    T_BOOL      [使用规则 32 以归约 (for_stmt)]
    SEMICOLON   [使用规则 32 以归约 (for_stmt)]
    IF          [使用规则 32 以归约 (for_stmt)]
    WHILE       [使用规则 32 以归约 (for_stmt)]
    FOR         [使用规则 32 以归约 (for_stmt)]
    RETURN      [使用规则 32 以归约 (for_stmt)]
    CONTINUE    [使用规则 32 以归约 (for_stmt)]
    BREAK       [使用规则 32 以归约 (for_stmt)]
    SCANF       [使用规则 32 以归约 (for_stmt)]
    PRINTF      [使用规则 32 以归约 (for_stmt)]
    LP          [使用规则 32 以归约 (for_stmt)]
    LB          [使用规则 32 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 32 以归约 (for_stmt)]
    INTEGER     [使用规则 32 以归约 (for_stmt)]
    CHAR        [使用规则 32 以归约 (for_stmt)]
    TRUE        [使用规则 32 以归约 (for_stmt)]
    FALSE       [使用规则 32 以归约 (for_stmt)]
    SUB         [使用规则 32 以归约 (for_stmt)]
    NOT         [使用规则 32 以归约 (for_stmt)]
    INC         [使用规则 32 以归约 (for_stmt)]
    DEC         [使用规则 32 以归约 (for_stmt)]
    $default    使用规则 32 以归约 (for_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 172

   30 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 178
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 173

   31 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 179
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 174

   28 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON expr . RP statements

    RP  偏移，并进入状态 180


状态 175

   46 io_stmt: SCANF LP STRING COMMA ADDR expr RP .

    $default  使用规则 46 以归约 (io_stmt)


状态 176

   43 io_stmt: PRINTF LP STRING COMMA ADDR expr RP .

    $default  使用规则 43 以归约 (io_stmt)


状态 177

    3 statements: statements . statement
   29 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 29 以归约 (for_stmt)]
    T_INT       [使用规则 29 以归约 (for_stmt)]
    T_BOOL      [使用规则 29 以归约 (for_stmt)]
    SEMICOLON   [使用规则 29 以归约 (for_stmt)]
    IF          [使用规则 29 以归约 (for_stmt)]
    WHILE       [使用规则 29 以归约 (for_stmt)]
    FOR         [使用规则 29 以归约 (for_stmt)]
    RETURN      [使用规则 29 以归约 (for_stmt)]
    CONTINUE    [使用规则 29 以归约 (for_stmt)]
    BREAK       [使用规则 29 以归约 (for_stmt)]
    SCANF       [使用规则 29 以归约 (for_stmt)]
    PRINTF      [使用规则 29 以归约 (for_stmt)]
    LP          [使用规则 29 以归约 (for_stmt)]
    LB          [使用规则 29 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 29 以归约 (for_stmt)]
    INTEGER     [使用规则 29 以归约 (for_stmt)]
    CHAR        [使用规则 29 以归约 (for_stmt)]
    TRUE        [使用规则 29 以归约 (for_stmt)]
    FALSE       [使用规则 29 以归约 (for_stmt)]
    SUB         [使用规则 29 以归约 (for_stmt)]
    NOT         [使用规则 29 以归约 (for_stmt)]
    INC         [使用规则 29 以归约 (for_stmt)]
    DEC         [使用规则 29 以归约 (for_stmt)]
    $default    使用规则 29 以归约 (for_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 178

    3 statements: statements . statement
   30 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 30 以归约 (for_stmt)]
    T_INT       [使用规则 30 以归约 (for_stmt)]
    T_BOOL      [使用规则 30 以归约 (for_stmt)]
    SEMICOLON   [使用规则 30 以归约 (for_stmt)]
    IF          [使用规则 30 以归约 (for_stmt)]
    WHILE       [使用规则 30 以归约 (for_stmt)]
    FOR         [使用规则 30 以归约 (for_stmt)]
    RETURN      [使用规则 30 以归约 (for_stmt)]
    CONTINUE    [使用规则 30 以归约 (for_stmt)]
    BREAK       [使用规则 30 以归约 (for_stmt)]
    SCANF       [使用规则 30 以归约 (for_stmt)]
    PRINTF      [使用规则 30 以归约 (for_stmt)]
    LP          [使用规则 30 以归约 (for_stmt)]
    LB          [使用规则 30 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 30 以归约 (for_stmt)]
    INTEGER     [使用规则 30 以归约 (for_stmt)]
    CHAR        [使用规则 30 以归约 (for_stmt)]
    TRUE        [使用规则 30 以归约 (for_stmt)]
    FALSE       [使用规则 30 以归约 (for_stmt)]
    SUB         [使用规则 30 以归约 (for_stmt)]
    NOT         [使用规则 30 以归约 (for_stmt)]
    INC         [使用规则 30 以归约 (for_stmt)]
    DEC         [使用规则 30 以归约 (for_stmt)]
    $default    使用规则 30 以归约 (for_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 179

    3 statements: statements . statement
   31 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 31 以归约 (for_stmt)]
    T_INT       [使用规则 31 以归约 (for_stmt)]
    T_BOOL      [使用规则 31 以归约 (for_stmt)]
    SEMICOLON   [使用规则 31 以归约 (for_stmt)]
    IF          [使用规则 31 以归约 (for_stmt)]
    WHILE       [使用规则 31 以归约 (for_stmt)]
    FOR         [使用规则 31 以归约 (for_stmt)]
    RETURN      [使用规则 31 以归约 (for_stmt)]
    CONTINUE    [使用规则 31 以归约 (for_stmt)]
    BREAK       [使用规则 31 以归约 (for_stmt)]
    SCANF       [使用规则 31 以归约 (for_stmt)]
    PRINTF      [使用规则 31 以归约 (for_stmt)]
    LP          [使用规则 31 以归约 (for_stmt)]
    LB          [使用规则 31 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 31 以归约 (for_stmt)]
    INTEGER     [使用规则 31 以归约 (for_stmt)]
    CHAR        [使用规则 31 以归约 (for_stmt)]
    TRUE        [使用规则 31 以归约 (for_stmt)]
    FALSE       [使用规则 31 以归约 (for_stmt)]
    SUB         [使用规则 31 以归约 (for_stmt)]
    NOT         [使用规则 31 以归约 (for_stmt)]
    INC         [使用规则 31 以归约 (for_stmt)]
    DEC         [使用规则 31 以归约 (for_stmt)]
    $default    使用规则 31 以归约 (for_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 180

   28 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 181
    statement    转到状态 27
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43


状态 181

    3 statements: statements . statement
   28 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON expr RP statements .

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    T_CHAR      [使用规则 28 以归约 (for_stmt)]
    T_INT       [使用规则 28 以归约 (for_stmt)]
    T_BOOL      [使用规则 28 以归约 (for_stmt)]
    SEMICOLON   [使用规则 28 以归约 (for_stmt)]
    IF          [使用规则 28 以归约 (for_stmt)]
    WHILE       [使用规则 28 以归约 (for_stmt)]
    FOR         [使用规则 28 以归约 (for_stmt)]
    RETURN      [使用规则 28 以归约 (for_stmt)]
    CONTINUE    [使用规则 28 以归约 (for_stmt)]
    BREAK       [使用规则 28 以归约 (for_stmt)]
    SCANF       [使用规则 28 以归约 (for_stmt)]
    PRINTF      [使用规则 28 以归约 (for_stmt)]
    LP          [使用规则 28 以归约 (for_stmt)]
    LB          [使用规则 28 以归约 (for_stmt)]
    IDENTIFIER  [使用规则 28 以归约 (for_stmt)]
    INTEGER     [使用规则 28 以归约 (for_stmt)]
    CHAR        [使用规则 28 以归约 (for_stmt)]
    TRUE        [使用规则 28 以归约 (for_stmt)]
    FALSE       [使用规则 28 以归约 (for_stmt)]
    SUB         [使用规则 28 以归约 (for_stmt)]
    NOT         [使用规则 28 以归约 (for_stmt)]
    INC         [使用规则 28 以归约 (for_stmt)]
    DEC         [使用规则 28 以归约 (for_stmt)]
    $default    使用规则 28 以归约 (for_stmt)

    statement    转到状态 72
    semi_stmt    转到状态 28
    block        转到状态 29
    decl_stmt    转到状态 30
    assign_stmt  转到状态 31
    if_stmt      转到状态 32
    for_stmt     转到状态 33
    while_stmt   转到状态 34
    jump_stmt    转到状态 35
    io_stmt      转到状态 36
    expr         转到状态 37
    addsub_expr  转到状态 38
    mdm_expr     转到状态 39
    unary_expr   转到状态 40
    bool_expr    转到状态 41
    logic_expr   转到状态 42
    T            转到状态 43
